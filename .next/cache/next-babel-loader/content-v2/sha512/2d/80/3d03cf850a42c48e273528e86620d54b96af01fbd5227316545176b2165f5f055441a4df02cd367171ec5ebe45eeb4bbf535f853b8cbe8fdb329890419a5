{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\components\\\\Calendar\\\\Calendar.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useStoreState, useActions } from 'unistore-hooks';\nimport { daysOrder, daysOrderCorrect, VIEW_TYPES } from '@utils/constants';\nimport CalendarDay from '@app/Calendar/CalendarDay';\nimport CalendarDayList from '@app/Calendar/CalendarDayList';\nimport { actions } from '@store/index';\nimport useWindowSize from '@app/hooks/useWindowSize';\nimport CalendarHeader from '@app/Calendar/CalendarHeader';\nimport './Calendar.module.css';\nimport { settingsDB } from '@store/idb';\nimport { DATE_END, DATE_TODAY } from '@utils/calendar';\n\nconst Calendar = ({\n  className = ''\n}) => {\n  const [view, setView] = React.useState(null);\n  const window = useWindowSize();\n  const calendarRef = React.useRef(null);\n  const [height, setHeight] = React.useState(null);\n  const [opacity, setOpacity] = React.useState(0);\n  const {\n    setMenuOpen\n  } = useActions(actions);\n  const {\n    menuOpen\n  } = useStoreState(['menuOpen']);\n  const isCalendar = React.useMemo(() => view === VIEW_TYPES.CALENDAR, [view]);\n  React.useEffect(() => {\n    if (!DATE_TODAY.isAfter(DATE_END)) {\n      setView(VIEW_TYPES.CALENDAR);\n      return;\n    }\n\n    if (!view) {\n      settingsDB.get('view').then(v => setView(v || VIEW_TYPES.CALENDAR));\n    }\n\n    settingsDB.set('view', view);\n  }, [view]);\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (calendarRef.current && window.width) {\n        if (!isCalendar) {\n          setHeight(window.height - 220);\n          return;\n        }\n\n        const isPortrait = window.height / window.width >= 1;\n        const maxHeight = window.height - 200;\n        let height = Math.round(calendarRef.current.clientWidth * (isPortrait ? 1.3 : 0.9));\n\n        if (height >= maxHeight) {\n          height = maxHeight;\n        }\n\n        setHeight(height);\n      }\n    }, 1);\n  }, [window, calendarRef, view]);\n  React.useEffect(() => {\n    height && setOpacity(1);\n  }, [height]);\n  return __jsx(\"div\", {\n    className: `calendar ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, menuOpen && __jsx(\"button\", {\n    className: \"calendar__button-overlay\",\n    onClick: () => setMenuOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"close\"), __jsx(CalendarHeader, {\n    className: \"calendar__header\",\n    setView: setView,\n    view: view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: isCalendar ? 'calendar__calendar' : 'calendar__list',\n    style: {\n      //height: isCalendar ? height : 'auto',\n      height,\n      opacity\n    },\n    ref: calendarRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, (isCalendar ? daysOrder : daysOrderCorrect).map(day => __jsx(\"div\", {\n    className: `calendar__item calendar__item--${day} calendar__item--${view} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, isCalendar ? __jsx(CalendarDay, {\n    day: parseInt(day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }) : __jsx(CalendarDayList, {\n    day: parseInt(day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Calendar;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/components/Calendar/Calendar.tsx"],"names":["React","useStoreState","useActions","daysOrder","daysOrderCorrect","VIEW_TYPES","CalendarDay","CalendarDayList","actions","useWindowSize","CalendarHeader","settingsDB","DATE_END","DATE_TODAY","Calendar","className","view","setView","useState","window","calendarRef","useRef","height","setHeight","opacity","setOpacity","setMenuOpen","menuOpen","isCalendar","useMemo","CALENDAR","useEffect","isAfter","get","then","v","set","setTimeout","current","width","isPortrait","maxHeight","Math","round","clientWidth","map","day","parseInt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useStoreState, useActions } from 'unistore-hooks';\n\nimport { daysOrder, daysOrderCorrect, VIEW_TYPES } from '@utils/constants';\nimport CalendarDay from '@app/Calendar/CalendarDay';\nimport CalendarDayList from '@app/Calendar/CalendarDayList';\nimport { State } from '@store/types';\nimport { actions } from '@store/index';\nimport useWindowSize from '@app/hooks/useWindowSize';\nimport CalendarHeader from '@app/Calendar/CalendarHeader';\n\nimport './Calendar.module.css';\nimport { settingsDB } from '@store/idb';\nimport { DATE_END, DATE_TODAY } from '@utils/calendar';\n\nconst Calendar = ({ className = '' }: { className?: string }) => {\n  const [view, setView] = React.useState(null);\n  const window = useWindowSize();\n  const calendarRef = React.useRef(null);\n  const [height, setHeight] = React.useState<number>(null);\n  const [opacity, setOpacity] = React.useState<number>(0);\n  const { setMenuOpen } = useActions(actions);\n  const { menuOpen } = useStoreState<State>(['menuOpen']);\n  const isCalendar = React.useMemo(() => view === VIEW_TYPES.CALENDAR, [view]);\n\n  React.useEffect(() => {\n    if (!DATE_TODAY.isAfter(DATE_END)) {\n      setView(VIEW_TYPES.CALENDAR);\n      return;\n    }\n    if (!view) {\n      settingsDB.get('view').then((v) => setView(v || VIEW_TYPES.CALENDAR));\n    }\n    settingsDB.set('view', view);\n  }, [view]);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (calendarRef.current && window.width) {\n        if (!isCalendar) {\n          setHeight(window.height - 220);\n          return;\n        }\n\n        const isPortrait = window.height / window.width >= 1;\n        const maxHeight = window.height - 200;\n\n        let height = Math.round(\n          calendarRef.current.clientWidth * (isPortrait ? 1.3 : 0.9)\n        );\n\n        if (height >= maxHeight) {\n          height = maxHeight;\n        }\n\n        setHeight(height);\n      }\n    }, 1);\n  }, [window, calendarRef, view]);\n\n  React.useEffect(() => {\n    height && setOpacity(1);\n  }, [height]);\n\n  return (\n    <div className={`calendar ${className}`}>\n      {menuOpen && (\n        <button\n          className=\"calendar__button-overlay\"\n          onClick={() => setMenuOpen(false)}\n        >\n          close\n        </button>\n      )}\n      <CalendarHeader\n        className=\"calendar__header\"\n        setView={setView}\n        view={view}\n      />\n      <div\n        className={isCalendar ? 'calendar__calendar' : 'calendar__list'}\n        style={{\n          //height: isCalendar ? height : 'auto',\n          height,\n          opacity,\n        }}\n        ref={calendarRef}\n      >\n        {(isCalendar ? daysOrder : daysOrderCorrect).map((day) => (\n          <div\n            className={`calendar__item calendar__item--${day} calendar__item--${view} `}\n          >\n            {isCalendar ? (\n              <CalendarDay day={parseInt(day)} />\n            ) : (\n              <CalendarDayList day={parseInt(day)} />\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}