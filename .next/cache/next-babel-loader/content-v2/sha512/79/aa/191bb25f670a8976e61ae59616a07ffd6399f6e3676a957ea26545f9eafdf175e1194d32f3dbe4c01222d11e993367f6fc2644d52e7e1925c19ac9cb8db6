{"ast":null,"code":"import _extends from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Button\\\\Button.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\nimport styles from './Button.module.css';\n\nvar Button = function Button(_ref) {\n  var _cn;\n\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? '' : _ref$children,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$onClick = _ref.onClick,\n      _onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,\n      _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? 'solid' : _ref$layout,\n      _ref$round = _ref.round,\n      round = _ref$round === void 0 ? false : _ref$round,\n      _ref$icon = _ref.icon,\n      icon = _ref$icon === void 0 ? '' : _ref$icon,\n      _ref$iconRight = _ref.iconRight,\n      iconRight = _ref$iconRight === void 0 ? false : _ref$iconRight,\n      _ref$iconCircle = _ref.iconCircle,\n      iconCircle = _ref$iconCircle === void 0 ? false : _ref$iconCircle,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'black' : _ref$color,\n      _ref$zeroPadding = _ref.zeroPadding,\n      zeroPadding = _ref$zeroPadding === void 0 ? false : _ref$zeroPadding,\n      _ref$fontWeight = _ref.fontWeight,\n      fontWeight = _ref$fontWeight === void 0 ? 'bold' : _ref$fontWeight,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\", \"layout\", \"round\", \"icon\", \"iconRight\", \"iconCircle\", \"size\", \"loading\", \"disabled\", \"color\", \"zeroPadding\", \"fontWeight\"]);\n\n  return __jsx(\"button\", _extends({}, props, {\n    disabled: disabled,\n    className: cn(className, styles.button, styles[\"type-\".concat(layout)], styles[\"size-\".concat(size)], styles[\"color-\".concat(color)], styles[\"fontWeight-\".concat(fontWeight)], (_cn = {}, _defineProperty(_cn, styles.isRound, round), _defineProperty(_cn, styles.isLoading, loading), _defineProperty(_cn, styles.isDisabled, disabled), _defineProperty(_cn, styles.zeropadding, zeroPadding), _cn)),\n    onClick: function onClick() {\n      return _onClick();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), __jsx(Loader, {\n    className: styles.loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), icon !== '' && !iconRight && __jsx(Icon, {\n    className: cn(styles.icon, styles.iconLeft),\n    icon: icon,\n    circle: iconCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, children), icon !== '' && iconRight && __jsx(Icon, {\n    className: cn(styles.icon, styles.iconRight),\n    icon: icon,\n    circle: iconCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Button/Button.tsx"],"names":["React","cn","Loader","Icon","styles","Button","children","className","onClick","layout","round","icon","iconRight","iconCircle","size","loading","disabled","color","zeroPadding","fontWeight","props","button","isRound","isLoading","isDisabled","zeropadding","loader","iconLeft","content"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAiCT;AAAA;;AAAA,2BAhCYC,QAgCZ;AAAA,MAhCYA,QAgCZ,8BAhCuB,EAgCvB;AAAA,4BA/BYC,SA+BZ;AAAA,MA/BYA,SA+BZ,+BA/BwB,EA+BxB;AAAA,0BA9BYC,OA8BZ;AAAA,MA9BYA,QA8BZ,6BA9BsB,YAAM,CACf,CA6Bb;AAAA,yBA5BYC,MA4BZ;AAAA,MA5BYA,MA4BZ,4BA5BqB,OA4BrB;AAAA,wBA3BYC,KA2BZ;AAAA,MA3BYA,KA2BZ,2BA3BoB,KA2BpB;AAAA,uBA1BYC,IA0BZ;AAAA,MA1BYA,IA0BZ,0BA1BmB,EA0BnB;AAAA,4BAzBYC,SAyBZ;AAAA,MAzBYA,SAyBZ,+BAzBwB,KAyBxB;AAAA,6BAxBYC,UAwBZ;AAAA,MAxBYA,UAwBZ,gCAxByB,KAwBzB;AAAA,uBAvBYC,IAuBZ;AAAA,MAvBYA,IAuBZ,0BAvBmB,QAuBnB;AAAA,0BAtBYC,OAsBZ;AAAA,MAtBYA,OAsBZ,6BAtBsB,KAsBtB;AAAA,2BArBYC,QAqBZ;AAAA,MArBYA,QAqBZ,8BArBuB,KAqBvB;AAAA,wBApBYC,KAoBZ;AAAA,MApBYA,KAoBZ,2BApBoB,OAoBpB;AAAA,8BAnBYC,WAmBZ;AAAA,MAnBYA,WAmBZ,iCAnB0B,KAmB1B;AAAA,6BAlBYC,UAkBZ;AAAA,MAlBYA,UAkBZ,gCAlByB,MAkBzB;AAAA,MAjBeC,KAiBf;;AACJ,SACE,6BACMA,KADN;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,SAAS,EAAEf,EAAE,CACXM,SADW,EAEXH,MAAM,CAACiB,MAFI,EAGXjB,MAAM,gBAASK,MAAT,EAHK,EAIXL,MAAM,gBAASU,IAAT,EAJK,EAKXV,MAAM,iBAAUa,KAAV,EALK,EAMXb,MAAM,sBAAee,UAAf,EANK,kCAQRf,MAAM,CAACkB,OARC,EAQSZ,KART,wBASRN,MAAM,CAACmB,SATC,EASWR,OATX,wBAURX,MAAM,CAACoB,UAVC,EAUYR,QAVZ,wBAWRZ,MAAM,CAACqB,WAXC,EAWaP,WAXb,QAHf;AAiBE,IAAA,OAAO,EAAE;AAAA,aAAMV,QAAO,EAAb;AAAA,KAjBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,MAAM,CAACsB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBGf,IAAI,KAAK,EAAT,IAAe,CAACC,SAAhB,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAEX,EAAE,CAACG,MAAM,CAACO,IAAR,EAAcP,MAAM,CAACuB,QAArB,CADf;AAEE,IAAA,IAAI,EAAEhB,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EA2BE;AAAM,IAAA,SAAS,EAAET,MAAM,CAACwB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCtB,QAAlC,CA3BF,EA4BGK,IAAI,KAAK,EAAT,IAAeC,SAAf,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAEX,EAAE,CAACG,MAAM,CAACO,IAAR,EAAcP,MAAM,CAACQ,SAArB,CADf;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADF;AAsCD,CAxED;;KAAMR,M;AA0EN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\nimport styles from './Button.module.css';\n\nconst Button = ({\n                  children = '',\n                  className = '',\n                  onClick = () => {\n                  },\n                  layout = 'solid',\n                  round = false,\n                  icon = '',\n                  iconRight = false,\n                  iconCircle = false,\n                  size = 'medium',\n                  loading = false,\n                  disabled = false,\n                  color = 'black',\n                  zeroPadding = false,\n                  fontWeight = 'bold',\n                  ...props\n                }: {\n  children?: any;\n  className?: string;\n  onClick?: Function;\n  layout?: 'solid' | 'ghost' | 'empty';\n  round?: boolean;\n  icon?: string;\n  iconRight?: boolean;\n  iconCircle?: boolean;\n  size?: 'medium' | 'small' | 'large';\n  loading?: boolean;\n  disabled?: boolean;\n  color?: 'black' | 'red';\n  zeroPadding?: boolean;\n  fontWeight?: 'normal' | 'bold';\n  [key: string]: any;\n}) => {\n  return (\n    <button\n      {...props}\n      disabled={disabled}\n      className={cn(\n        className,\n        styles.button,\n        styles[`type-${layout}`],\n        styles[`size-${size}`],\n        styles[`color-${color}`],\n        styles[`fontWeight-${fontWeight}`],\n        {\n          [styles.isRound]: round,\n          [styles.isLoading]: loading,\n          [styles.isDisabled]: disabled,\n          [styles.zeropadding]: zeroPadding,\n        },\n      )}\n      onClick={() => onClick()}\n    >\n      <Loader className={styles.loader} />\n      {icon !== '' && !iconRight && (\n        <Icon\n          className={cn(styles.icon, styles.iconLeft)}\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n      <span className={styles.content}>{children}</span>\n      {icon !== '' && iconRight && (\n        <Icon\n          className={cn(styles.icon, styles.iconRight)}\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}