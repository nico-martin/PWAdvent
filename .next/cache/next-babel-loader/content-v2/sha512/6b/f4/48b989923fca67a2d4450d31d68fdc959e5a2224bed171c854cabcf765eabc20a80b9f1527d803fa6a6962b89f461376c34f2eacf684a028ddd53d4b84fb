{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\components\\\\Content\\\\Content.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react'; //import { useParams, useHistory, Route, Switch } from 'react-router-dom';\n\nimport Head from 'next/head';\nimport { useStoreState, useActions } from 'unistore-hooks';\nimport { actions } from '@store/index';\nimport './Content.css';\nimport { ContentModal } from '@theme';\nimport ContentCalendar from './ContentCalendar';\nimport ContentPage from './ContentPage';\nimport { metaTitle } from '@utils/metas';\n\nconst Content = ({\n  className = ''\n}) => {\n  const {\n    loadDay\n  } = useActions(actions);\n  const {\n    page = null,\n    slug = null\n  } = useParams();\n  const {\n    push\n  } = useHistory();\n  const {\n    days: storeDays\n  } = useStoreState(['days']);\n  const active = React.useMemo(() => !!page, [page]);\n  const activeDay = React.useMemo(() => active !== false && page === 'day' && storeDays[slug] || false, [active, storeDays[slug], slug]);\n  React.useEffect(() => {\n    activeDay && loadDay(slug);\n  }, [slug]);\n\n  if (!active) {\n    return __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, metaTitle()));\n  }\n\n  if (activeDay) {\n    return __jsx(ContentModal, {\n      title: activeDay.error !== '' ? `Day ${slug}` : activeDay.data.title || '',\n      onClose: () => push('/'),\n      loading: activeDay.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, __jsx(ContentCalendar, {\n      day: activeDay.data,\n      number: slug,\n      error: activeDay.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (page === 'email-notification') {\n    return __jsx(ContentModal, {\n      className: className,\n      onClose: () => push('/'),\n      title: \"Email Notification\",\n      full: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, slug === 'success' ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Thank you very much. Your email address has been successfully verified.\") : slug === 'unsubscribe' ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"You have been successfully signed out.\") : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Ooops.. Something went wrong.\"));\n  }\n\n  return __jsx(ContentPage, {\n    className: className,\n    slug: page,\n    onClose: () => push('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default (props => __jsx(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }\n}, __jsx(Route, {\n  path: \"/:page?/:slug?/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }\n}, __jsx(Content, _extends({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }\n})))));","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/components/Content/Content.tsx"],"names":["React","Head","useStoreState","useActions","actions","ContentModal","ContentCalendar","ContentPage","metaTitle","Content","className","loadDay","page","slug","useParams","push","useHistory","days","storeDays","active","useMemo","activeDay","useEffect","error","data","title","loading","props"],"mappings":"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","sourcesContent":["import React from 'react';\n//import { useParams, useHistory, Route, Switch } from 'react-router-dom';\nimport Head from 'next/head';\n\nimport { useStoreState, useActions } from 'unistore-hooks';\nimport { actions } from '@store/index';\nimport { State } from '@store/types';\n\nimport './Content.css';\n\nimport { ContentModal } from '@theme';\nimport { Day } from '@app/types';\n\nimport ContentCalendar from './ContentCalendar';\nimport ContentPage from './ContentPage';\nimport { metaTitle } from '@utils/metas';\n\nconst Content = ({ className = '' }: { className?: string }) => {\n  const { loadDay } = useActions(actions);\n  const { page = null, slug = null } = useParams();\n  const { push } = useHistory();\n\n  const { days: storeDays } = useStoreState<State>(['days']);\n\n  const active: boolean = React.useMemo(() => !!page, [page]);\n  const activeDay: Day = React.useMemo(\n    () => (active !== false && page === 'day' && storeDays[slug]) || false,\n    [active, storeDays[slug], slug]\n  );\n\n  React.useEffect(() => {\n    activeDay && loadDay(slug);\n  }, [slug]);\n\n  if (!active) {\n    return (\n      <Head>\n        <title>{metaTitle()}</title>\n      </Head>\n    );\n  }\n\n  if (activeDay) {\n    return (\n      <ContentModal\n        title={\n          activeDay.error !== '' ? `Day ${slug}` : activeDay.data.title || ''\n        }\n        onClose={() => push('/')}\n        loading={activeDay.loading}\n      >\n        <ContentCalendar\n          day={activeDay.data}\n          number={slug}\n          error={activeDay.error}\n        />\n      </ContentModal>\n    );\n  }\n\n  if (page === 'email-notification') {\n    return (\n      <ContentModal\n        className={className}\n        onClose={() => push('/')}\n        title=\"Email Notification\"\n        full={false}\n      >\n        {slug === 'success' ? (\n          <p>\n            Thank you very much. Your email address has been successfully\n            verified.\n          </p>\n        ) : slug === 'unsubscribe' ? (\n          <p>You have been successfully signed out.</p>\n        ) : (\n          <p>Ooops.. Something went wrong.</p>\n        )}\n      </ContentModal>\n    );\n  }\n\n  return (\n    <ContentPage className={className} slug={page} onClose={() => push('/')} />\n  );\n};\n\nexport default (props) => (\n  <Switch>\n    <Route path=\"/:page?/:slug?/\">\n      <Content {...props} />\n    </Route>\n  </Switch>\n);\n"]},"metadata":{},"sourceType":"module"}