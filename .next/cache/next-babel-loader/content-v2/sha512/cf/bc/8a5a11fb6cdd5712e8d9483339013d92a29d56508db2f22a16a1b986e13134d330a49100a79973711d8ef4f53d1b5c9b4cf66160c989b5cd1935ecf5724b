{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport createStore from 'unistore';\nimport devtools from 'unistore/devtools';\nimport { isDev, zeroPad } from '@utils/helpers';\nimport { daysDB, pageDB } from '@store/idb';\nimport { CALENDAR, DATE_START, DATE_TODAY, DATE_TODAY_ZERO, YEAR } from '@utils/calendar';\nimport dayjs from '@utils/dayjs';\nimport { apiBase, apiKey } from '@utils/constants';\nconst initialDays = {};\nCALENDAR.map(day => {\n  initialDays[day] = {\n    loading: false,\n    error: '',\n    data: {\n      date: `${YEAR}-12-${zeroPad(day, 2)}`,\n      title: '',\n      content: ''\n    }\n  };\n});\nconst initialState = {\n  offline: false,\n  menuOpen: DATE_TODAY.isBefore(DATE_START),\n  days: initialDays,\n  page: {\n    loading: false,\n    slug: '',\n    data: {\n      title: '',\n      content: ''\n    }\n  }\n};\n\nconst setDay = (day, store, value = {}) => {\n  const state = store.getState();\n  const daysNow = state.days;\n  store.setState({\n    days: _objectSpread(_objectSpread({}, daysNow), {}, {\n      [day]: _objectSpread(_objectSpread({}, daysNow[day]), value)\n    })\n  });\n};\n\nconst setPage = (slug, store, title, content) => {\n  const state = store.getState();\n\n  if (state.page.slug !== slug) {\n    return;\n  }\n\n  store.setState({\n    page: _objectSpread(_objectSpread({}, state.page), {}, {\n      loading: false,\n      data: {\n        title,\n        content\n      }\n    })\n  });\n};\n\nexport const actions = store => ({\n  setOffline: (state, offline) => store.setState({\n    offline\n  }),\n  loadDay: async ({\n    days\n  }, day) => {\n    const storeDay = days[day];\n\n    if (!storeDay || !storeDay.data || !storeDay.data.date) {\n      setDay(day, store, {\n        loading: false,\n        error: 'Something went wrong'\n      });\n      return;\n    } // check if API has already released article\n\n\n    if (dayjs(storeDay.data.date).tz('Antarctica/McMurdo', true).isAfter(DATE_TODAY_ZERO)) {\n      setDay(day, store, {\n        loading: false,\n        error: 'This article is not yet published.'\n      });\n      return;\n    }\n\n    setDay(day, store, {\n      loading: true,\n      error: ''\n    });\n    let dayObject = await daysDB.get(String(day));\n\n    if (dayObject) {\n      setDay(day, store, {\n        loading: false,\n        data: dayObject\n      });\n    }\n\n    const resp = await fetch(`${apiBase}wp-json/advent-calendar/v1/days/${day}/${apiKey ? `?apiKey=${apiKey}` : ''}`); // not found\n\n    if (!resp.ok && !dayObject) {\n      setDay(day, store, {\n        loading: false,\n        error: 'There is no Article for this day.'\n      });\n      return;\n    } // ok\n\n\n    const respJson = await resp.json();\n    dayObject = _objectSpread(_objectSpread({}, storeDay.data), {}, {\n      title: respJson.title,\n      excerpt: respJson.excerpt,\n      content: respJson.content,\n      author: respJson.author,\n      image: respJson.image,\n      source: respJson.source\n    }); //}\n\n    setDay(day, store, {\n      loading: false,\n      data: dayObject\n    });\n    await daysDB.set(String(day), _objectSpread({}, dayObject));\n  },\n  setMenuOpen: (state, menuOpen) => store.setState({\n    menuOpen\n  }),\n  loadPage: async (state, slug) => {\n    store.setState({\n      page: _objectSpread(_objectSpread({}, state.page), {}, {\n        loading: true,\n        slug\n      })\n    });\n    const content = await pageDB.get(slug);\n\n    if (content) {\n      setPage(slug, store, content.title, content.content);\n    }\n\n    const resp = await fetch(`${apiBase}wp-json/advent-calendar/v1/page/${slug}/`);\n\n    if (resp.status !== 200 && !content) {\n      setPage(slug, store, 'Error 404', 'The Page you are looking for des not exist');\n      return;\n    }\n\n    const respJson = await resp.json();\n    setPage(slug, store, respJson.title, respJson.content);\n    await pageDB.set(slug, {\n      title: respJson.title,\n      contsnt: respJson.content\n    });\n  }\n});\nexport const store = isDev ? createStore(initialState) : devtools(createStore(initialState));","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/store/index.ts"],"names":["createStore","devtools","isDev","zeroPad","daysDB","pageDB","CALENDAR","DATE_START","DATE_TODAY","DATE_TODAY_ZERO","YEAR","dayjs","apiBase","apiKey","initialDays","map","day","loading","error","data","date","title","content","initialState","offline","menuOpen","isBefore","days","page","slug","setDay","store","value","state","getState","daysNow","setState","setPage","actions","setOffline","loadDay","storeDay","tz","isAfter","dayObject","get","String","resp","fetch","ok","respJson","json","excerpt","author","image","source","set","setMenuOpen","loadPage","status","contsnt"],"mappings":"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","sourcesContent":["import { State } from './types';\n\nimport createStore, { Store } from 'unistore';\nimport devtools from 'unistore/devtools';\n\nimport { isDev, zeroPad } from '@utils/helpers';\nimport { daysDB, pageDB } from '@store/idb';\nimport {\n  CALENDAR,\n  DATE_START,\n  DATE_TODAY,\n  DATE_TODAY_ZERO,\n  YEAR,\n} from '@utils/calendar';\nimport dayjs from '@utils/dayjs';\n\nimport { apiBase, apiKey } from '@utils/constants';\n\nconst initialDays = {};\nCALENDAR.map(day => {\n  initialDays[day] = {\n    loading: false,\n    error: '',\n    data: {\n      date: `${YEAR}-12-${zeroPad(day, 2)}`,\n      title: '',\n      content: '',\n    },\n  };\n});\n\nconst initialState: State = {\n  offline: false,\n  menuOpen: DATE_TODAY.isBefore(DATE_START),\n  days: initialDays,\n  page: {\n    loading: false,\n    slug: '',\n    data: {\n      title: '',\n      content: '',\n    },\n  },\n};\n\nconst setDay = (day: number, store: Store<State>, value = {}): void => {\n  const state = store.getState();\n  const daysNow = state.days;\n  store.setState({\n    days: {\n      ...daysNow,\n      [day]: {\n        ...daysNow[day],\n        ...value,\n      },\n    },\n  });\n};\n\nconst setPage = (\n  slug: string,\n  store: Store<State>,\n  title: string,\n  content: string\n): void => {\n  const state = store.getState();\n  if (state.page.slug !== slug) {\n    return;\n  }\n  store.setState({\n    page: {\n      ...state.page,\n      loading: false,\n      data: {\n        title,\n        content,\n      },\n    },\n  });\n};\n\nexport const actions = (store: Store<State>) => ({\n  setOffline: (state, offline: boolean) => store.setState({ offline }),\n  loadDay: async ({ days }, day: number) => {\n    const storeDay = days[day];\n\n    if (!storeDay || !storeDay.data || !storeDay.data.date) {\n      setDay(day, store, {\n        loading: false,\n        error: 'Something went wrong',\n      });\n      return;\n    }\n\n    // check if API has already released article\n    if (\n      dayjs(storeDay.data.date)\n        .tz('Antarctica/McMurdo', true)\n        .isAfter(DATE_TODAY_ZERO)\n    ) {\n      setDay(day, store, {\n        loading: false,\n        error: 'This article is not yet published.',\n      });\n      return;\n    }\n\n    setDay(day, store, {\n      loading: true,\n      error: '',\n    });\n\n    let dayObject = await daysDB.get(String(day));\n    if (dayObject) {\n      setDay(day, store, {\n        loading: false,\n        data: dayObject,\n      });\n    }\n\n    const resp = await fetch(\n      `${apiBase}wp-json/advent-calendar/v1/days/${day}/${\n        apiKey ? `?apiKey=${apiKey}` : ''\n      }`\n    );\n\n    // not found\n    if (!resp.ok && !dayObject) {\n      setDay(day, store, {\n        loading: false,\n        error: 'There is no Article for this day.',\n      });\n      return;\n    }\n\n    // ok\n    const respJson = await resp.json();\n\n    dayObject = {\n      ...storeDay.data,\n      title: respJson.title,\n      excerpt: respJson.excerpt,\n      content: respJson.content,\n      author: respJson.author,\n      image: respJson.image,\n      source: respJson.source,\n    };\n    //}\n\n    setDay(day, store, {\n      loading: false,\n      data: dayObject,\n    });\n    await daysDB.set(String(day), { ...dayObject });\n  },\n  setMenuOpen: (state, menuOpen: boolean) => store.setState({ menuOpen }),\n  loadPage: async (state, slug: string) => {\n    store.setState({ page: { ...state.page, loading: true, slug } });\n    const content = await pageDB.get(slug);\n    if (content) {\n      setPage(slug, store, content.title, content.content);\n    }\n\n    const resp = await fetch(\n      `${apiBase}wp-json/advent-calendar/v1/page/${slug}/`\n    );\n    if (resp.status !== 200 && !content) {\n      setPage(\n        slug,\n        store,\n        'Error 404',\n        'The Page you are looking for des not exist'\n      );\n      return;\n    }\n\n    const respJson = await resp.json();\n    setPage(slug, store, respJson.title, respJson.content);\n\n    await pageDB.set(slug, {\n      title: respJson.title,\n      contsnt: respJson.content,\n    });\n  },\n});\n\nexport const store = isDev\n  ? createStore(initialState)\n  : devtools(createStore(initialState));\n"]},"metadata":{},"sourceType":"module"}