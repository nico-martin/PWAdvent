{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Button\\\\Button.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\n\nconst Button = (_ref) => {\n  let {\n    children = '',\n    className = '',\n    onClick = () => {},\n    layout = 'solid',\n    round = false,\n    icon = '',\n    iconRight = false,\n    iconCircle = false,\n    size = 'medium',\n    loading = false,\n    disabled = false,\n    color = 'black',\n    zeroPadding = false,\n    fontWeight = 'bold'\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\", \"layout\", \"round\", \"icon\", \"iconRight\", \"iconCircle\", \"size\", \"loading\", \"disabled\", \"color\", \"zeroPadding\", \"fontWeight\"]);\n\n  return __jsx(\"button\", _extends({}, props, {\n    disabled: disabled,\n    className: cn(className, 'button', `button--type-${layout}`, `button--size-${size}`, `button--color-${color}`, `button--fontWeight-${fontWeight}`, {\n      'button--round': round,\n      'button--loading': loading,\n      'button--disabled': disabled,\n      'button--zeropadding': zeroPadding\n    }),\n    onClick: () => onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), __jsx(Loader, {\n    className: \"button__loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), icon !== '' && !iconRight && __jsx(Icon, {\n    className: \"button__icon button__icon--left\",\n    icon: icon,\n    circle: iconCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"button__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, children), icon !== '' && iconRight && __jsx(Icon, {\n    className: \"button__icon button__icon--right\",\n    icon: icon,\n    circle: iconCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Button/Button.tsx"],"names":["React","cn","Loader","Icon","Button","children","className","onClick","layout","round","icon","iconRight","iconCircle","size","loading","disabled","color","zeroPadding","fontWeight","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,UAA7B;;AAGA,MAAMC,MAAM,GAAG,UAgCT;AAAA,MAhCU;AACdC,IAAAA,QAAQ,GAAG,EADG;AAEdC,IAAAA,SAAS,GAAG,EAFE;AAGdC,IAAAA,OAAO,GAAG,MAAM,CAAE,CAHJ;AAIdC,IAAAA,MAAM,GAAG,OAJK;AAKdC,IAAAA,KAAK,GAAG,KALM;AAMdC,IAAAA,IAAI,GAAG,EANO;AAOdC,IAAAA,SAAS,GAAG,KAPE;AAQdC,IAAAA,UAAU,GAAG,KARC;AASdC,IAAAA,IAAI,GAAG,QATO;AAUdC,IAAAA,OAAO,GAAG,KAVI;AAWdC,IAAAA,QAAQ,GAAG,KAXG;AAYdC,IAAAA,KAAK,GAAG,OAZM;AAadC,IAAAA,WAAW,GAAG,KAbA;AAcdC,IAAAA,UAAU,GAAG;AAdC,GAgCV;AAAA,MAjBDC,KAiBC;;AACJ,SACE,6BACMA,KADN;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,SAAS,EAAEd,EAAE,CACXK,SADW,EAEX,QAFW,EAGV,gBAAeE,MAAO,EAHZ,EAIV,gBAAeK,IAAK,EAJV,EAKV,iBAAgBG,KAAM,EALZ,EAMV,sBAAqBE,UAAW,EANtB,EAOX;AACE,uBAAiBT,KADnB;AAEE,yBAAmBK,OAFrB;AAGE,0BAAoBC,QAHtB;AAIE,6BAAuBE;AAJzB,KAPW,CAHf;AAiBE,IAAA,OAAO,EAAE,MAAMV,OAAO,EAjBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBGG,IAAI,KAAK,EAAT,IAAe,CAACC,SAAhB,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EA2BE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCP,QAAnC,CA3BF,EA4BGK,IAAI,KAAK,EAAT,IAAeC,SAAf,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,kCADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADF;AAsCD,CAvED;;AAyEA,eAAeR,MAAf","sourcesContent":["import React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\nimport styles from './Button.module.css';\n\nconst Button = ({\n  children = '',\n  className = '',\n  onClick = () => {},\n  layout = 'solid',\n  round = false,\n  icon = '',\n  iconRight = false,\n  iconCircle = false,\n  size = 'medium',\n  loading = false,\n  disabled = false,\n  color = 'black',\n  zeroPadding = false,\n  fontWeight = 'bold',\n  ...props\n}: {\n  children?: React.JSX.Element | React.JSX.Element[] | string;\n  className?: string;\n  onClick?: Function;\n  layout?: 'solid' | 'ghost' | 'empty';\n  round?: boolean;\n  icon?: string;\n  iconRight?: boolean;\n  iconCircle?: boolean;\n  size?: 'medium' | 'small' | 'large';\n  loading?: boolean;\n  disabled?: boolean;\n  color?: 'black' | 'red';\n  zeroPadding?: boolean;\n  fontWeight?: 'normal' | 'bold';\n  [key: string]: any;\n}) => {\n  return (\n    <button\n      {...props}\n      disabled={disabled}\n      className={cn(\n        className,\n        'button',\n        `button--type-${layout}`,\n        `button--size-${size}`,\n        `button--color-${color}`,\n        `button--fontWeight-${fontWeight}`,\n        {\n          'button--round': round,\n          'button--loading': loading,\n          'button--disabled': disabled,\n          'button--zeropadding': zeroPadding,\n        }\n      )}\n      onClick={() => onClick()}\n    >\n      <Loader className=\"button__loader\" />\n      {icon !== '' && !iconRight && (\n        <Icon\n          className=\"button__icon button__icon--left\"\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n      <span className=\"button__content\">{children}</span>\n      {icon !== '' && iconRight && (\n        <Icon\n          className=\"button__icon button__icon--right\"\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}