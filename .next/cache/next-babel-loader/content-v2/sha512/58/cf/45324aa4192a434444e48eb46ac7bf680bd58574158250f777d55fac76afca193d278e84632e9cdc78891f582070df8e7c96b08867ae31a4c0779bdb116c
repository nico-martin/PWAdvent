{"ast":null,"code":"import _slicedToArray from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from 'react';\n\nvar useWindowSize = function useWindowSize() {\n  _s();\n\n  var _React$useState = React.useState({\n    width: null,\n    height: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      windowSize = _React$useState2[0],\n      setWindowSize = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleResize = function handleResize() {\n      return setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n    window.setTimeout(function () {\n      return handleResize();\n    }, 1000);\n    handleResize();\n    return function () {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n    };\n  }, []);\n  return windowSize;\n};\n\n_s(useWindowSize, \"FSP7Buo8FOcjg8j3u3kVi66AwhQ=\");\n\nexport default useWindowSize;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/components/hooks/useWindowSize.tsx"],"names":["React","useWindowSize","useState","width","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","setTimeout","removeEventListener"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAyC;AAAA;;AAAA,wBACzBD,KAAK,CAACE,QAAN,CAAe;AACjDC,IAAAA,KAAK,EAAE,IAD0C;AAEjDC,IAAAA,MAAM,EAAE;AAFyC,GAAf,CADyB;AAAA;AAAA,MACtDC,UADsD;AAAA,MAC1CC,aAD0C;;AAM7DN,EAAAA,KAAK,CAACO,SAAN,CAAgB,YAAM;AACpB,QAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,aACnBF,aAAa,CAAC;AACZH,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADF;AAEZN,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAFH,OAAD,CADM;AAAA,KAArB;;AAMAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC;AACAC,IAAAA,MAAM,CAACG,gBAAP,CAAwB,mBAAxB,EAA6CJ,YAA7C;AACAC,IAAAA,MAAM,CAACI,UAAP,CAAkB;AAAA,aAAML,YAAY,EAAlB;AAAA,KAAlB,EAAwC,IAAxC;AACAA,IAAAA,YAAY;AAEZ,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,YAArC;AACAC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,mBAA3B,EAAgDN,YAAhD;AACD,KAHD;AAID,GAhBD,EAgBG,EAhBH;AAkBA,SAAOH,UAAP;AACD,CAzBD;;GAAMJ,a;;AA2BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nconst useWindowSize = (): { width: number; height: number } => {\n  const [windowSize, setWindowSize] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  React.useEffect(() => {\n    const handleResize = () =>\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n    window.setTimeout(() => handleResize(), 1000);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n    };\n  }, []);\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}