{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Input from './Input';\n\nconst InputText = props => Input(_objectSpread(_objectSpread({}, props), {}, {\n  type: 'text',\n  subtype: props.type\n}));\n\nexport default InputText;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Form/InputText.tsx"],"names":["Input","InputText","props","type","subtype"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IACrBF,KAAK,iCAAME,KAAN;AAAaC,EAAAA,IAAI,EAAE,MAAnB;AAA2BC,EAAAA,OAAO,EAAEF,KAAK,CAACC;AAA1C,GADP;;AAGA,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport Input from './Input';\n\nconst InputText = props =>\n  Input({ ...props, type: 'text', subtype: props.type });\n\nexport default InputText;\n"]},"metadata":{},"sourceType":"module"}