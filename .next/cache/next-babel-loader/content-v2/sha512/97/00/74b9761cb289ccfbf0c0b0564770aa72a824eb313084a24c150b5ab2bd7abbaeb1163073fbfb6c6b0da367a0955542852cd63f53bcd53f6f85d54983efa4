{"ast":null,"code":"import _extends from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Button\\\\Button.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\n\nvar Button = function Button(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? '' : _ref$children,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$onClick = _ref.onClick,\n      _onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,\n      _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? 'solid' : _ref$layout,\n      _ref$round = _ref.round,\n      round = _ref$round === void 0 ? false : _ref$round,\n      _ref$icon = _ref.icon,\n      icon = _ref$icon === void 0 ? '' : _ref$icon,\n      _ref$iconRight = _ref.iconRight,\n      iconRight = _ref$iconRight === void 0 ? false : _ref$iconRight,\n      _ref$iconCircle = _ref.iconCircle,\n      iconCircle = _ref$iconCircle === void 0 ? false : _ref$iconCircle,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'black' : _ref$color,\n      _ref$zeroPadding = _ref.zeroPadding,\n      zeroPadding = _ref$zeroPadding === void 0 ? false : _ref$zeroPadding,\n      _ref$fontWeight = _ref.fontWeight,\n      fontWeight = _ref$fontWeight === void 0 ? 'bold' : _ref$fontWeight,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\", \"layout\", \"round\", \"icon\", \"iconRight\", \"iconCircle\", \"size\", \"loading\", \"disabled\", \"color\", \"zeroPadding\", \"fontWeight\"]);\n\n  return __jsx(\"button\", _extends({}, props, {\n    disabled: disabled,\n    className: cn(className, 'button', \"button--type-\".concat(layout), \"button--size-\".concat(size), \"button--color-\".concat(color), \"button--fontWeight-\".concat(fontWeight), {\n      'button--round': round,\n      'button--loading': loading,\n      'button--disabled': disabled,\n      'button--zeropadding': zeroPadding\n    }),\n    onClick: function onClick() {\n      return _onClick();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), __jsx(Loader, {\n    className: \"button__loader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), icon !== '' && !iconRight && __jsx(Icon, {\n    className: \"button__icon button__icon--left\",\n    icon: icon,\n    circle: iconCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"button__content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, children), icon !== '' && iconRight && __jsx(Icon, {\n    className: \"button__icon button__icon--right\",\n    icon: icon,\n    circle: iconCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Button/Button.tsx"],"names":["React","cn","Loader","Icon","Button","children","className","onClick","layout","round","icon","iconRight","iconCircle","size","loading","disabled","color","zeroPadding","fontWeight","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,UAA7B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAgCT;AAAA,2BA/BJC,QA+BI;AAAA,MA/BJA,QA+BI,8BA/BO,EA+BP;AAAA,4BA9BJC,SA8BI;AAAA,MA9BJA,SA8BI,+BA9BQ,EA8BR;AAAA,0BA7BJC,OA6BI;AAAA,MA7BJA,QA6BI,6BA7BM,YAAM,CAAE,CA6Bd;AAAA,yBA5BJC,MA4BI;AAAA,MA5BJA,MA4BI,4BA5BK,OA4BL;AAAA,wBA3BJC,KA2BI;AAAA,MA3BJA,KA2BI,2BA3BI,KA2BJ;AAAA,uBA1BJC,IA0BI;AAAA,MA1BJA,IA0BI,0BA1BG,EA0BH;AAAA,4BAzBJC,SAyBI;AAAA,MAzBJA,SAyBI,+BAzBQ,KAyBR;AAAA,6BAxBJC,UAwBI;AAAA,MAxBJA,UAwBI,gCAxBS,KAwBT;AAAA,uBAvBJC,IAuBI;AAAA,MAvBJA,IAuBI,0BAvBG,QAuBH;AAAA,0BAtBJC,OAsBI;AAAA,MAtBJA,OAsBI,6BAtBM,KAsBN;AAAA,2BArBJC,QAqBI;AAAA,MArBJA,QAqBI,8BArBO,KAqBP;AAAA,wBApBJC,KAoBI;AAAA,MApBJA,KAoBI,2BApBI,OAoBJ;AAAA,8BAnBJC,WAmBI;AAAA,MAnBJA,WAmBI,iCAnBU,KAmBV;AAAA,6BAlBJC,UAkBI;AAAA,MAlBJA,UAkBI,gCAlBS,MAkBT;AAAA,MAjBDC,KAiBC;;AACJ,SACE,6BACMA,KADN;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,SAAS,EAAEd,EAAE,CACXK,SADW,EAEX,QAFW,yBAGKE,MAHL,0BAIKK,IAJL,2BAKMG,KALN,gCAMWE,UANX,GAOX;AACE,uBAAiBT,KADnB;AAEE,yBAAmBK,OAFrB;AAGE,0BAAoBC,QAHtB;AAIE,6BAAuBE;AAJzB,KAPW,CAHf;AAiBE,IAAA,OAAO,EAAE;AAAA,aAAMV,QAAO,EAAb;AAAA,KAjBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBGG,IAAI,KAAK,EAAT,IAAe,CAACC,SAAhB,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EA2BE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCP,QAAnC,CA3BF,EA4BGK,IAAI,KAAK,EAAT,IAAeC,SAAf,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,kCADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADF;AAsCD,CAvED;;KAAMR,M;AAyEN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\nimport styles from './Button.module.css';\n\nconst Button = ({\n  children = '',\n  className = '',\n  onClick = () => {},\n  layout = 'solid',\n  round = false,\n  icon = '',\n  iconRight = false,\n  iconCircle = false,\n  size = 'medium',\n  loading = false,\n  disabled = false,\n  color = 'black',\n  zeroPadding = false,\n  fontWeight = 'bold',\n  ...props\n}: {\n  children?: any;\n  className?: string;\n  onClick?: Function;\n  layout?: 'solid' | 'ghost' | 'empty';\n  round?: boolean;\n  icon?: string;\n  iconRight?: boolean;\n  iconCircle?: boolean;\n  size?: 'medium' | 'small' | 'large';\n  loading?: boolean;\n  disabled?: boolean;\n  color?: 'black' | 'red';\n  zeroPadding?: boolean;\n  fontWeight?: 'normal' | 'bold';\n  [key: string]: any;\n}) => {\n  return (\n    <button\n      {...props}\n      disabled={disabled}\n      className={cn(\n        className,\n        'button',\n        `button--type-${layout}`,\n        `button--size-${size}`,\n        `button--color-${color}`,\n        `button--fontWeight-${fontWeight}`,\n        {\n          'button--round': round,\n          'button--loading': loading,\n          'button--disabled': disabled,\n          'button--zeropadding': zeroPadding,\n        }\n      )}\n      onClick={() => onClick()}\n    >\n      <Loader className=\"button__loader\" />\n      {icon !== '' && !iconRight && (\n        <Icon\n          className=\"button__icon button__icon--left\"\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n      <span className=\"button__content\">{children}</span>\n      {icon !== '' && iconRight && (\n        <Icon\n          className=\"button__icon button__icon--right\"\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}