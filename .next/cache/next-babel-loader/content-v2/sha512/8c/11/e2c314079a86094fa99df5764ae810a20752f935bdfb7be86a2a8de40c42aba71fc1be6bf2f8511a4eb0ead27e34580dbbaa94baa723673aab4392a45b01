{"ast":null,"code":"import _extends from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Form\\\\Input.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport cn from '@utils/classnames';\nimport './Input.css';\n\nvar Input = function Input(_ref) {\n  _s();\n\n  var name = _ref.name,\n      id = _ref.id,\n      label = _ref.label,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$classNameLabel = _ref.classNameLabel,\n      classNameLabel = _ref$classNameLabel === void 0 ? '' : _ref$classNameLabel,\n      _ref$classNameInput = _ref.classNameInput,\n      classNameInput = _ref$classNameInput === void 0 ? '' : _ref$classNameInput,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'text' : _ref$type,\n      _ref$subtype = _ref.subtype,\n      subtype = _ref$subtype === void 0 ? 'text' : _ref$subtype,\n      _ref$value = _ref.value,\n      initialValue = _ref$value === void 0 ? '' : _ref$value,\n      _ref$choices = _ref.choices,\n      choices = _ref$choices === void 0 ? {} : _ref$choices,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? '' : _ref$error,\n      _ref$onChange = _ref.onChange,\n      _onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$onValueChanged = _ref.onValueChanged,\n      onValueChanged = _ref$onValueChanged === void 0 ? function () {} : _ref$onValueChanged,\n      props = _objectWithoutProperties(_ref, [\"name\", \"id\", \"label\", \"className\", \"classNameLabel\", \"classNameInput\", \"type\", \"subtype\", \"value\", \"choices\", \"error\", \"onChange\", \"onValueChanged\"]);\n\n  var _React$useState = React.useState(initialValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var prevValue = React.useRef(null);\n\n  var inputProps = _objectSpread(_objectSpread({}, props), {}, {\n    className: cn(classNameInput, 'input__element', \"input__element--\".concat(type), \"input__element--\".concat(value !== '' || type === 'select' && Object.values(choices).length && Object.values(choices)[0] !== '' ? 'value' : 'empty')),\n    name: name,\n    id: id,\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      setValue(e.target.value);\n    }\n  });\n\n  React.useEffect(function () {\n    onValueChanged && onValueChanged(value, prevValue.current);\n    prevValue.current = value;\n  }, [value]);\n  return __jsx(\"div\", {\n    className: cn(className, 'input', \"input--\".concat(type), {\n      'input--error': error !== ''\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    className: cn(classNameLabel, 'input__label'),\n    htmlFor: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, label), type === 'textarea' && __jsx(\"textarea\", _extends({}, inputProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 31\n    }\n  }), value), type === 'text' && __jsx(\"input\", _extends({\n    type: subtype\n  }, inputProps, value ? {\n    value: value\n  } : {}, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), type === 'select' && __jsx(\"select\", _extends({}, inputProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), Object.entries(choices).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        val = _ref3[1];\n\n    return __jsx(\"option\", {\n      key: key,\n      selected: key === value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, val);\n  })), error !== '' && __jsx(\"span\", {\n    className: \"input__error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 24\n    }\n  }, error));\n};\n\n_s(Input, \"haBGPHE+drmlPxEAoILGQ8CWMPM=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Form/Input.tsx"],"names":["React","cn","Input","name","id","label","className","classNameLabel","classNameInput","type","subtype","value","initialValue","choices","error","onChange","onValueChanged","props","useState","setValue","prevValue","useRef","inputProps","Object","values","length","e","target","useEffect","current","entries","map","key","val"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport cn from '@utils/classnames';\r\n\r\nimport './Input.css';\r\n\r\nconst Input = ({\r\n  name,\r\n  id,\r\n  label,\r\n  className = '',\r\n  classNameLabel = '',\r\n  classNameInput = '',\r\n  type = 'text',\r\n  subtype = 'text',\r\n  value: initialValue = '',\r\n  choices = {},\r\n  error = '',\r\n  onChange = () => {},\r\n  onValueChanged = () => {},\r\n  ...props\r\n}: {\r\n  name: string;\r\n  id: string;\r\n  className?: string;\r\n  classNameLabel?: string;\r\n  classNameInput?: string;\r\n  label: string;\r\n  type?: 'text' | 'textarea' | 'select';\r\n  subtype?: string;\r\n  value?: string;\r\n  choices?: {\r\n    [k: string]: string;\r\n  };\r\n  error?: string;\r\n  onChange?: Function;\r\n  onValueChanged?: Function;\r\n  [k: string]: any;\r\n}) => {\r\n  const [value, setValue] = React.useState(initialValue);\r\n  const prevValue = React.useRef(null);\r\n\r\n  const inputProps = {\r\n    ...props,\r\n    className: cn(\r\n      classNameInput,\r\n      'input__element',\r\n      `input__element--${type}`,\r\n      `input__element--${\r\n        value !== '' ||\r\n        (type === 'select' &&\r\n          Object.values(choices).length &&\r\n          Object.values(choices)[0] !== '')\r\n          ? 'value'\r\n          : 'empty'\r\n      }`\r\n    ),\r\n    name,\r\n    id,\r\n    onChange: e => {\r\n      onChange(e);\r\n      setValue(e.target.value);\r\n    },\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    onValueChanged && onValueChanged(value, prevValue.current);\r\n    prevValue.current = value;\r\n  }, [value]);\r\n\r\n  return (\r\n    <div\r\n      className={cn(className, 'input', `input--${type}`, {\r\n        'input--error': error !== '',\r\n      })}\r\n    >\r\n      <label className={cn(classNameLabel, 'input__label')} htmlFor={id}>\r\n        {label}\r\n      </label>\r\n      {type === 'textarea' && <textarea {...inputProps}>{value}</textarea>}\r\n      {type === 'text' && (\r\n        <input type={subtype} {...inputProps} {...(value ? { value } : {})} />\r\n      )}\r\n      {type === 'select' && (\r\n        <select {...inputProps}>\r\n          {Object.entries(choices).map(([key, val]) => (\r\n            <option key={key} selected={key === value}>\r\n              {val}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      )}\r\n      {error !== '' && <span className=\"input__error\">{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}