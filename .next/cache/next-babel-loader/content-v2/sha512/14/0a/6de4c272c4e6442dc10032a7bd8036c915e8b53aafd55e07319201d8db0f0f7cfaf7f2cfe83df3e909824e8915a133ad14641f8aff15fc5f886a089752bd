{"ast":null,"code":"import { openDB } from 'idb';\nconst dbName = 'pwadvent';\nconst dbPromise = openDB(dbName, 2, {\n  upgrade(db, oldVersion) {\n    if (oldVersion < 1) {\n      db.createObjectStore('days');\n      db.createObjectStore('page');\n    }\n\n    if (oldVersion < 2) {\n      db.createObjectStore('settings');\n    }\n  }\n\n});\nexport const daysDB = {\n  get: async key => (await dbPromise).get('days', key),\n  set: async (key, val) => (await dbPromise).put('days', val, key),\n  delete: async key => (await dbPromise).delete('days', key)\n};\nexport const pageDB = {\n  get: async key => (await dbPromise).get('page', key),\n  set: async (key, val) => (await dbPromise).put('page', val, key),\n  delete: async key => (await dbPromise).delete('page', key)\n};\nexport const settingsDB = {\n  get: async key => (await dbPromise).get('settings', key),\n  set: async (key, val) => (await dbPromise).put('settings', val, key),\n  delete: async key => (await dbPromise).delete('settings', key)\n};","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/store/idb.ts"],"names":["openDB","dbName","dbPromise","upgrade","db","oldVersion","createObjectStore","daysDB","get","key","set","val","put","delete","pageDB","settingsDB"],"mappings":"AAAA,SAASA,MAAT,QAAiC,KAAjC;AAGA,MAAMC,MAAM,GAAG,UAAf;AAiBA,MAAMC,SAAS,GAAGF,MAAM,CAAaC,MAAb,EAAqB,CAArB,EAAwB;AAC9CE,EAAAA,OAAO,CAACC,EAAD,EAAKC,UAAL,EAAiB;AACtB,QAAIA,UAAU,GAAG,CAAjB,EAAoB;AAClBD,MAAAA,EAAE,CAACE,iBAAH,CAAqB,MAArB;AACAF,MAAAA,EAAE,CAACE,iBAAH,CAAqB,MAArB;AACD;;AACD,QAAID,UAAU,GAAG,CAAjB,EAAoB;AAClBD,MAAAA,EAAE,CAACE,iBAAH,CAAqB,UAArB;AACD;AACF;;AAT6C,CAAxB,CAAxB;AAYA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE,MAAOC,GAAP,IAAuB,CAAC,MAAMP,SAAP,EAAkBM,GAAlB,CAAsB,MAAtB,EAA8BC,GAA9B,CADR;AAEpBC,EAAAA,GAAG,EAAE,OAAOD,GAAP,EAAoBE,GAApB,KAAiC,CAAC,MAAMT,SAAP,EAAkBU,GAAlB,CAAsB,MAAtB,EAA8BD,GAA9B,EAAmCF,GAAnC,CAFlB;AAGpBI,EAAAA,MAAM,EAAE,MAAOJ,GAAP,IAAuB,CAAC,MAAMP,SAAP,EAAkBW,MAAlB,CAAyB,MAAzB,EAAiCJ,GAAjC;AAHX,CAAf;AAMP,OAAO,MAAMK,MAAM,GAAG;AACpBN,EAAAA,GAAG,EAAE,MAAOC,GAAP,IAAuB,CAAC,MAAMP,SAAP,EAAkBM,GAAlB,CAAsB,MAAtB,EAA8BC,GAA9B,CADR;AAEpBC,EAAAA,GAAG,EAAE,OAAOD,GAAP,EAAoBE,GAApB,KAAiC,CAAC,MAAMT,SAAP,EAAkBU,GAAlB,CAAsB,MAAtB,EAA8BD,GAA9B,EAAmCF,GAAnC,CAFlB;AAGpBI,EAAAA,MAAM,EAAE,MAAOJ,GAAP,IAAuB,CAAC,MAAMP,SAAP,EAAkBW,MAAlB,CAAyB,MAAzB,EAAiCJ,GAAjC;AAHX,CAAf;AAMP,OAAO,MAAMM,UAAU,GAAG;AACxBP,EAAAA,GAAG,EAAE,MAAOC,GAAP,IAAuB,CAAC,MAAMP,SAAP,EAAkBM,GAAlB,CAAsB,UAAtB,EAAkCC,GAAlC,CADJ;AAExBC,EAAAA,GAAG,EAAE,OAAOD,GAAP,EAAoBE,GAApB,KACH,CAAC,MAAMT,SAAP,EAAkBU,GAAlB,CAAsB,UAAtB,EAAkCD,GAAlC,EAAuCF,GAAvC,CAHsB;AAIxBI,EAAAA,MAAM,EAAE,MAAOJ,GAAP,IAAuB,CAAC,MAAMP,SAAP,EAAkBW,MAAlB,CAAyB,UAAzB,EAAqCJ,GAArC;AAJP,CAAnB","sourcesContent":["import { openDB, DBSchema } from 'idb';\nimport { DayData } from '@comps/types';\n\nconst dbName = 'pwadvent';\n\ninterface PWAdventDB extends DBSchema {\n  days: {\n    key: string;\n    value: any;\n  };\n  page: {\n    key: string;\n    value: DayData;\n  };\n  settings: {\n    key: string;\n    value: any;\n  };\n}\n\nconst dbPromise = openDB<PWAdventDB>(dbName, 2, {\n  upgrade(db, oldVersion) {\n    if (oldVersion < 1) {\n      db.createObjectStore('days');\n      db.createObjectStore('page');\n    }\n    if (oldVersion < 2) {\n      db.createObjectStore('settings');\n    }\n  },\n});\n\nexport const daysDB = {\n  get: async (key: string) => (await dbPromise).get('days', key),\n  set: async (key: string, val: any) => (await dbPromise).put('days', val, key),\n  delete: async (key: string) => (await dbPromise).delete('days', key),\n};\n\nexport const pageDB = {\n  get: async (key: string) => (await dbPromise).get('page', key),\n  set: async (key: string, val: any) => (await dbPromise).put('page', val, key),\n  delete: async (key: string) => (await dbPromise).delete('page', key),\n};\n\nexport const settingsDB = {\n  get: async (key: string) => (await dbPromise).get('settings', key),\n  set: async (key: string, val: any) =>\n    (await dbPromise).put('settings', val, key),\n  delete: async (key: string) => (await dbPromise).delete('settings', key),\n};\n"]},"metadata":{},"sourceType":"module"}