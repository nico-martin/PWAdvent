{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Image\\\\LazyImage.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// @ts-ignore\nimport lazySizes from 'lazysizes';\nimport 'lazysizes/plugins/attrchange/ls.attrchange';\nimport 'lazysizes/plugins/bgset/ls.bgset';\nimport 'lazysizes/plugins/respimg/ls.respimg';\nimport React from 'react';\nimport styles from './LazyImage.module.css';\nconst BASE = 'lazyimage';\nlazySizes.cfg.lazyClass = styles.imageLazyload;\nlazySizes.cfg.loadingClass = styles.imageLazyloading;\nlazySizes.cfg.loadedClass = styles.imageLazyloaded;\ndocument.addEventListener('lazyloaded', e => {\n  lazySizesFindParent(e.target).classList.add(`${BASE}--loaded`);\n});\n\nconst lazySizesFindParent = el => {\n  while ((el = el.parentElement) && !el.classList.contains(BASE));\n\n  return el;\n};\n\nconst LazyImage = (_ref) => {\n  let {\n    image,\n    background = false,\n    alt,\n    width = 0,\n    height = 0,\n    className = ''\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"image\", \"background\", \"alt\", \"width\", \"height\", \"className\"]);\n\n  const mainImage = React.useMemo(() => Object.values(image.sizes).map(size => ({\n    url: size.url,\n    width: size.width,\n    height: size.height\n  }))[0], [image]);\n  return __jsx(\"figure\", _extends({\n    className: `${BASE} ${background ? `${BASE}--background` : ''} ${className}`\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), background ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: `${BASE}__preview`,\n    style: {\n      backgroundImage: \"url('\" + image.placeholder + \"')\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    title: alt || image.alt,\n    className: `${BASE}__image ${BASE}__image--lazyload`,\n    style: {\n      backgroundImage: \"url('\" + image.placeholder + \"')\"\n    },\n    \"data-bgset\": Object.entries(image.sizes).map(([width, url]) => `${url} ${width}w`).join(', '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    \"aria-hidden\": \"true\",\n    className: `${BASE}__preview`,\n    src: image.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), __jsx(\"img\", {\n    alt: alt || image.alt,\n    width: mainImage.width,\n    height: mainImage.height,\n    className: `${BASE}__image ${BASE}__image--lazyload`,\n    \"data-sizes\": \"auto\",\n    src: image.placeholder,\n    \"data-src\": mainImage.url,\n    \"data-srcset\": Object.entries(image.sizes).map(([name, {\n      width,\n      url\n    }]) => `${url} ${width}w`).join(', '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default LazyImage;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Image/LazyImage.tsx"],"names":["lazySizes","React","styles","BASE","cfg","lazyClass","imageLazyload","loadingClass","imageLazyloading","loadedClass","imageLazyloaded","document","addEventListener","e","lazySizesFindParent","target","classList","add","el","parentElement","contains","LazyImage","image","background","alt","width","height","className","props","mainImage","useMemo","Object","values","sizes","map","size","url","backgroundImage","placeholder","entries","join","name"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport lazySizes from 'lazysizes';\nimport 'lazysizes/plugins/attrchange/ls.attrchange';\nimport 'lazysizes/plugins/bgset/ls.bgset';\nimport 'lazysizes/plugins/respimg/ls.respimg';\nimport React from 'react';\nimport { ApiImage } from '@comps/types';\nimport styles from './LazyImage.module.css';\n\nconst BASE = 'lazyimage';\n\nlazySizes.cfg.lazyClass = styles.imageLazyload;\nlazySizes.cfg.loadingClass = styles.imageLazyloading;\nlazySizes.cfg.loadedClass = styles.imageLazyloaded;\ndocument.addEventListener('lazyloaded', (e) => {\n  lazySizesFindParent(e.target).classList.add(`${BASE}--loaded`);\n});\n\nconst lazySizesFindParent = (el) => {\n  while ((el = el.parentElement) && !el.classList.contains(BASE));\n  return el;\n};\n\nconst LazyImage = ({\n  image,\n  background = false,\n  alt,\n  width = 0,\n  height = 0,\n  className = '',\n  ...props\n}: {\n  image: ApiImage;\n  background?: boolean;\n  alt?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  [key: string]: any;\n}) => {\n  const mainImage = React.useMemo(\n    () =>\n      Object.values(image.sizes).map((size) => ({\n        url: size.url,\n        width: size.width,\n        height: size.height,\n      }))[0],\n    [image]\n  );\n\n  return (\n    <figure\n      className={`${BASE} ${\n        background ? `${BASE}--background` : ''\n      } ${className}`}\n      {...props}\n    >\n      {background ? (\n        <React.Fragment>\n          <div\n            aria-hidden=\"true\"\n            className={`${BASE}__preview`}\n            style={{\n              backgroundImage: \"url('\" + image.placeholder + \"')\",\n            }}\n          />\n          <div\n            title={alt || image.alt}\n            className={`${BASE}__image ${BASE}__image--lazyload`}\n            style={{ backgroundImage: \"url('\" + image.placeholder + \"')\" }}\n            data-bgset={Object.entries(image.sizes)\n              .map(([width, url]) => `${url} ${width}w`)\n              .join(', ')}\n          />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <img\n            aria-hidden=\"true\"\n            className={`${BASE}__preview`}\n            src={image.placeholder}\n          />\n          <img\n            alt={alt || image.alt}\n            width={mainImage.width}\n            height={mainImage.height}\n            className={`${BASE}__image ${BASE}__image--lazyload`}\n            data-sizes=\"auto\"\n            src={image.placeholder}\n            data-src={mainImage.url}\n            data-srcset={Object.entries(image.sizes)\n              .map(([name, { width, url }]) => `${url} ${width}w`)\n              .join(', ')}\n          />\n        </React.Fragment>\n      )}\n    </figure>\n  );\n};\n\nexport default LazyImage;\n"]},"metadata":{},"sourceType":"module"}