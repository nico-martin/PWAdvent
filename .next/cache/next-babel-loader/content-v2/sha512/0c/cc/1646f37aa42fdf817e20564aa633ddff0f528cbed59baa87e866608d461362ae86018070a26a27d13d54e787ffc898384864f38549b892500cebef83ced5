{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/admin/Documents/Dev/PWAdvent/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\src\\\\app\\\\About\\\\PushNotifications.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cn from '@utils/classnames';\nimport { Button, Notification, SVG } from '@theme';\nimport { isIos, urlB64ToUint8Array } from '@utils/helpers';\nimport './PushNotifications.css';\nimport { apiBase } from '@utils/constants';\n\nvar PushNotifications = function PushNotifications(_ref) {\n  _s();\n\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      error = _React$useState2[0],\n      setError = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isSubscribed = _React$useState4[0],\n      setIsSubscribed = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  var supportsPush = 'PushManager' in window && 'serviceWorker' in navigator;\n  React.useEffect(function () {\n    (function () {\n      var _effect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var reg, subscription;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(window.Notification.permission === 'denied')) {\n                  _context.next = 3;\n                  break;\n                }\n\n                setError('It looks like you already explicitly denied permission for pwadvent.dev to display system notifications. Please change this option in the site settings and reload this page.');\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.next = 5;\n                return navigator.serviceWorker.getRegistration();\n\n              case 5:\n                reg = _context.sent;\n                _context.next = 8;\n                return reg.pushManager.getSubscription();\n\n              case 8:\n                subscription = _context.sent;\n\n                if (!subscription) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 12;\n                return sendSubscription(subscription.toJSON());\n\n              case 12:\n                setIsSubscribed(true);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function effect() {\n        return _effect.apply(this, arguments);\n      }\n\n      return effect;\n    })()();\n  }, []);\n\n  var getVapidKey = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var key, resp, respJson;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              key = '';\n              _context2.next = 3;\n              return fetch(\"\".concat(apiBase, \"wp-json/advent-calendar/v1/web-push/public-key\"));\n\n            case 3:\n              resp = _context2.sent;\n\n              if (!resp.ok) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 7;\n              return resp.json();\n\n            case 7:\n              respJson = _context2.sent;\n              key = respJson.publicKey;\n\n            case 9:\n              return _context2.abrupt(\"return\", key);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getVapidKey() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var subscribe = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var reg, vapidKey, subscription;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              _context3.next = 3;\n              return navigator.serviceWorker.getRegistration();\n\n            case 3:\n              reg = _context3.sent;\n              _context3.next = 6;\n              return getVapidKey();\n\n            case 6:\n              vapidKey = _context3.sent;\n\n              if (vapidKey === '') {\n                alert('something went wrong. Could not connect to the push server');\n              }\n\n              _context3.next = 10;\n              return reg.pushManager.subscribe({\n                userVisibleOnly: true,\n                applicationServerKey: new Uint8Array(urlB64ToUint8Array(vapidKey))\n              });\n\n            case 10:\n              subscription = _context3.sent;\n              _context3.next = 13;\n              return sendSubscription(subscription.toJSON());\n\n            case 13:\n              setLoading(false);\n              setIsSubscribed(true);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function subscribe() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var unsubscribe = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var reg, subscription;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setLoading(true);\n              _context4.next = 3;\n              return navigator.serviceWorker.getRegistration();\n\n            case 3:\n              reg = _context4.sent;\n              _context4.next = 6;\n              return reg.pushManager.getSubscription();\n\n            case 6:\n              subscription = _context4.sent;\n              _context4.next = 9;\n              return sendDeleteSubscription(subscription.toJSON());\n\n            case 9:\n              _context4.next = 11;\n              return subscription.unsubscribe();\n\n            case 11:\n              setLoading(false);\n              setIsSubscribed(false);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function unsubscribe() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var sendSubscription = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(subscription) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", fetch(\"\".concat(apiBase, \"wp-json/advent-calendar/v1/web-push/subscription/\"), {\n                method: 'post',\n                body: JSON.stringify({\n                  subscription: subscription,\n                  timezoneOffset: new Date().getTimezoneOffset()\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function sendSubscription(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var sendDeleteSubscription = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(subscription) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", fetch(\"\".concat(apiBase, \"wp-json/advent-calendar/v1/web-push/subscription/\"), {\n                method: 'delete',\n                body: JSON.stringify({\n                  subscription: subscription\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function sendDeleteSubscription(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: cn(className, 'push-notifications'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: \"push-notifications__about\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Never miss a feature again!\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), \"Subscribe to push notifications and receive a daily notification when the new window opens.\"), __jsx(\"div\", {\n    className: \"push-notifications__feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, error !== '' ? __jsx(Notification, {\n    type: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, error)) : !supportsPush ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(Notification, {\n    type: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Your browser does not support web push notifications.\")), isIos && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), \"Unfortunately, \", __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 32\n    }\n  }, \"Apple\"), \" tries to hold back the further development of rich web applications by\", ' ', __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"not implementing features like web push into iOS.\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), \"It is now up to us to build pressure by\", ' ', __jsx(\"a\", {\n    href: \"https://bugs.webkit.org/show_bug.cgi?id=182566\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"describing our usecase\"), ' ', \"and/or\", ' ', __jsx(\"a\", {\n    href: \"https://www.change.org/p/tim-cook-apple-inc-implement-web-push-notifications-on-ios-devices?utm_content=cl_sharecopy_18178670_fr-FR%3Av1&recruiter=1092330168&recruited_by_id=76293570-9ba6-11ea-bd01-e5d39501339a&utm_source=share_petition&utm_medium=copylink&utm_campaign=psf_combo_share_initial&utm_term=share_petition\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"making ourselves heard\"), \".\")) : !isSubscribed ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    icon: \"mdi/bell\",\n    onClick: function onClick() {\n      return subscribe();\n    },\n    color: \"red\",\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Subscribe\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    className: \"fs--xsmall\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"From the first to the 24th of december 2020 we will send you a link to the latest article every morning. You are able to unsubscribe at any time here\")) : __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"push-notifications__checked\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, __jsx(SVG, {\n    path: \"icon/mdi/check.svg\",\n    inline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }), ' ', __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"Push notifications are activated\")), __jsx(Button, {\n    layout: \"ghost\",\n    size: \"small\",\n    icon: \"mdi/bell-outline\",\n    round: true,\n    onClick: function onClick() {\n      return unsubscribe();\n    },\n    loading: loading,\n    fontWeight: \"normal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Unsubscribe\"))));\n};\n\n_s(PushNotifications, \"dafxC5Npf/Yyj3ESC0udQKrULq8=\");\n\n_c = PushNotifications;\nexport default PushNotifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"PushNotifications\");","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/src/app/About/PushNotifications.tsx"],"names":["React","cn","Button","Notification","SVG","isIos","urlB64ToUint8Array","apiBase","PushNotifications","className","useState","error","setError","isSubscribed","setIsSubscribed","loading","setLoading","supportsPush","window","navigator","useEffect","permission","serviceWorker","getRegistration","reg","pushManager","getSubscription","subscription","sendSubscription","toJSON","effect","getVapidKey","key","fetch","resp","ok","json","respJson","publicKey","subscribe","vapidKey","alert","userVisibleOnly","applicationServerKey","Uint8Array","unsubscribe","sendDeleteSubscription","method","body","JSON","stringify","timezoneOffset","Date","getTimezoneOffset","headers"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useStoreState } from 'unistore-hooks';\n\nimport cn from '@utils/classnames';\n\nimport { State } from '@store/types';\nimport { Button, Loader, Notification, SVG } from '@theme';\nimport { isIos, urlB64ToUint8Array } from '@utils/helpers';\n\nimport './PushNotifications.css';\nimport { apiBase } from '@utils/constants';\n\nconst PushNotifications = ({ className = '' }: { className?: string }) => {\n  const [error, setError] = React.useState<string>('');\n  const [isSubscribed, setIsSubscribed] = React.useState<boolean>(false);\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const supportsPush = 'PushManager' in window && 'serviceWorker' in navigator;\n\n  React.useEffect(() => {\n    (async function effect() {\n      if (window.Notification.permission === 'denied') {\n        setError(\n          'It looks like you already explicitly denied permission for pwadvent.dev to display system notifications. Please change this option in the site settings and reload this page.'\n        );\n        return;\n      }\n\n      const reg = await navigator.serviceWorker.getRegistration();\n      const subscription = await reg.pushManager.getSubscription();\n      if (subscription) {\n        await sendSubscription(subscription.toJSON());\n        setIsSubscribed(true);\n      }\n    })();\n  }, []);\n\n  const getVapidKey = async () => {\n    let key = '';\n    const resp = await fetch(\n      `${apiBase}wp-json/advent-calendar/v1/web-push/public-key`\n    );\n\n    if (resp.ok) {\n      const respJson = await resp.json();\n      key = respJson.publicKey;\n    }\n    return key;\n  };\n\n  const subscribe = async () => {\n    setLoading(true);\n    const reg = await navigator.serviceWorker.getRegistration();\n    const vapidKey = await getVapidKey();\n    if (vapidKey === '') {\n      alert('something went wrong. Could not connect to the push server');\n    }\n    const subscription = await reg.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: new Uint8Array(urlB64ToUint8Array(vapidKey)),\n    });\n    await sendSubscription(subscription.toJSON());\n    setLoading(false);\n    setIsSubscribed(true);\n  };\n\n  const unsubscribe = async () => {\n    setLoading(true);\n    const reg = await navigator.serviceWorker.getRegistration();\n    const subscription = await reg.pushManager.getSubscription();\n    await sendDeleteSubscription(subscription.toJSON());\n    await subscription.unsubscribe();\n    setLoading(false);\n    setIsSubscribed(false);\n  };\n\n  const sendSubscription = async (subscription: PushSubscriptionJSON) =>\n    fetch(`${apiBase}wp-json/advent-calendar/v1/web-push/subscription/`, {\n      method: 'post',\n      body: JSON.stringify({\n        subscription: subscription,\n        timezoneOffset: new Date().getTimezoneOffset(),\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n  const sendDeleteSubscription = async (subscription: PushSubscriptionJSON) =>\n    fetch(`${apiBase}wp-json/advent-calendar/v1/web-push/subscription/`, {\n      method: 'delete',\n      body: JSON.stringify({\n        subscription: subscription,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n  return (\n    <div className={cn(className, 'push-notifications')}>\n      <p className=\"push-notifications__about\">\n        <b>Never miss a feature again!</b>\n        <br />\n        Subscribe to push notifications and receive a daily notification when\n        the new window opens.\n      </p>\n      <div className=\"push-notifications__feedback\">\n        {error !== '' ? (\n          <Notification type=\"error\">\n            <p>{error}</p>\n          </Notification>\n        ) : !supportsPush ? (\n          <React.Fragment>\n            <Notification type=\"error\">\n              <p>Your browser does not support web push notifications.</p>\n            </Notification>\n            {isIos && (\n              <p>\n                <br />\n                Unfortunately, <b>Apple</b> tries to hold back the further\n                development of rich web applications by{' '}\n                <b>not implementing features like web push into iOS.</b>\n                <br />\n                It is now up to us to build pressure by{' '}\n                <a\n                  href=\"https://bugs.webkit.org/show_bug.cgi?id=182566\"\n                  target=\"_blank\"\n                >\n                  describing our usecase\n                </a>{' '}\n                and/or{' '}\n                <a\n                  href=\"https://www.change.org/p/tim-cook-apple-inc-implement-web-push-notifications-on-ios-devices?utm_content=cl_sharecopy_18178670_fr-FR%3Av1&recruiter=1092330168&recruited_by_id=76293570-9ba6-11ea-bd01-e5d39501339a&utm_source=share_petition&utm_medium=copylink&utm_campaign=psf_combo_share_initial&utm_term=share_petition\"\n                  target=\"_blank\"\n                >\n                  making ourselves heard\n                </a>\n                .\n              </p>\n            )}\n          </React.Fragment>\n        ) : !isSubscribed ? (\n          <React.Fragment>\n            <Button\n              icon=\"mdi/bell\"\n              onClick={() => subscribe()}\n              color=\"red\"\n              loading={loading}\n            >\n              Subscribe\n            </Button>\n            <br />\n            <p className=\"fs--xsmall\">\n              From the first to the 24th of december 2020 we will send you a\n              link to the latest article every morning. You are able to\n              unsubscribe at any time here\n            </p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p className=\"push-notifications__checked\">\n              <SVG path=\"icon/mdi/check.svg\" inline />{' '}\n              <b>Push notifications are activated</b>\n            </p>\n            <Button\n              layout=\"ghost\"\n              size=\"small\"\n              icon=\"mdi/bell-outline\"\n              round\n              onClick={() => unsubscribe()}\n              loading={loading}\n              fontWeight=\"normal\"\n            >\n              Unsubscribe\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PushNotifications;\n"]},"metadata":{},"sourceType":"module"}