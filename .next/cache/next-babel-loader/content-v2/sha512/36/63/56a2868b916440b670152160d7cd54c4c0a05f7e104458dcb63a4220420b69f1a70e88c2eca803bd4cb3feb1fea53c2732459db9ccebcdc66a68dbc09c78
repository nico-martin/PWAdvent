{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Button\\\\Button.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\nimport styles from './Button.module.css';\n\nconst Button = (_ref) => {\n  let {\n    children = '',\n    className = '',\n    onClick = () => {},\n    layout = 'solid',\n    round = false,\n    icon = '',\n    iconRight = false,\n    iconCircle = false,\n    size = 'medium',\n    loading = false,\n    disabled = false,\n    color = 'black',\n    zeroPadding = false,\n    fontWeight = 'bold'\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\", \"layout\", \"round\", \"icon\", \"iconRight\", \"iconCircle\", \"size\", \"loading\", \"disabled\", \"color\", \"zeroPadding\", \"fontWeight\"]);\n\n  return __jsx(\"button\", _extends({}, props, {\n    disabled: disabled,\n    className: cn(className, styles.button, styles[`type-${layout}`], styles[`size-${size}`], styles[`color-${color}`], styles[`fontWeight-${fontWeight}`], {\n      [styles.isRound]: round,\n      [styles.isLoading]: loading,\n      [styles.isDisabled]: disabled,\n      [styles.zeropadding]: zeroPadding\n    }),\n    onClick: () => onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), __jsx(Loader, {\n    className: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), icon !== '' && !iconRight && __jsx(Icon, {\n    className: cn(styles.icon, styles.iconLeft),\n    icon: icon,\n    circle: iconCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, children), icon !== '' && iconRight && __jsx(Icon, {\n    className: cn(styles.icon, styles.iconRight),\n    icon: icon,\n    circle: iconCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Button/Button.tsx"],"names":["React","cn","Loader","Icon","styles","Button","children","className","onClick","layout","round","icon","iconRight","iconCircle","size","loading","disabled","color","zeroPadding","fontWeight","props","button","isRound","isLoading","isDisabled","zeropadding","loader","iconLeft","content"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,MAAM,GAAG,UAiCT;AAAA,MAjCU;AACEC,IAAAA,QAAQ,GAAG,EADb;AAEEC,IAAAA,SAAS,GAAG,EAFd;AAGEC,IAAAA,OAAO,GAAG,MAAM,CACf,CAJH;AAKEC,IAAAA,MAAM,GAAG,OALX;AAMEC,IAAAA,KAAK,GAAG,KANV;AAOEC,IAAAA,IAAI,GAAG,EAPT;AAQEC,IAAAA,SAAS,GAAG,KARd;AASEC,IAAAA,UAAU,GAAG,KATf;AAUEC,IAAAA,IAAI,GAAG,QAVT;AAWEC,IAAAA,OAAO,GAAG,KAXZ;AAYEC,IAAAA,QAAQ,GAAG,KAZb;AAaEC,IAAAA,KAAK,GAAG,OAbV;AAcEC,IAAAA,WAAW,GAAG,KAdhB;AAeEC,IAAAA,UAAU,GAAG;AAff,GAiCV;AAAA,MAjBeC,KAiBf;;AACJ,SACE,6BACMA,KADN;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,SAAS,EAAEf,EAAE,CACXM,SADW,EAEXH,MAAM,CAACiB,MAFI,EAGXjB,MAAM,CAAE,QAAOK,MAAO,EAAhB,CAHK,EAIXL,MAAM,CAAE,QAAOU,IAAK,EAAd,CAJK,EAKXV,MAAM,CAAE,SAAQa,KAAM,EAAhB,CALK,EAMXb,MAAM,CAAE,cAAae,UAAW,EAA1B,CANK,EAOX;AACE,OAACf,MAAM,CAACkB,OAAR,GAAkBZ,KADpB;AAEE,OAACN,MAAM,CAACmB,SAAR,GAAoBR,OAFtB;AAGE,OAACX,MAAM,CAACoB,UAAR,GAAqBR,QAHvB;AAIE,OAACZ,MAAM,CAACqB,WAAR,GAAsBP;AAJxB,KAPW,CAHf;AAiBE,IAAA,OAAO,EAAE,MAAMV,OAAO,EAjBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,MAAM,CAACsB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBGf,IAAI,KAAK,EAAT,IAAe,CAACC,SAAhB,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAEX,EAAE,CAACG,MAAM,CAACO,IAAR,EAAcP,MAAM,CAACuB,QAArB,CADf;AAEE,IAAA,IAAI,EAAEhB,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EA2BE;AAAM,IAAA,SAAS,EAAET,MAAM,CAACwB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCtB,QAAlC,CA3BF,EA4BGK,IAAI,KAAK,EAAT,IAAeC,SAAf,IACC,MAAC,IAAD;AACE,IAAA,SAAS,EAAEX,EAAE,CAACG,MAAM,CAACO,IAAR,EAAcP,MAAM,CAACQ,SAArB,CADf;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEE,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADF;AAsCD,CAxED;;AA0EA,eAAeR,MAAf","sourcesContent":["import React from 'react';\nimport cn from '@utils/classnames';\nimport { Loader, Icon } from '../index';\nimport styles from './Button.module.css';\n\nconst Button = ({\n                  children = '',\n                  className = '',\n                  onClick = () => {\n                  },\n                  layout = 'solid',\n                  round = false,\n                  icon = '',\n                  iconRight = false,\n                  iconCircle = false,\n                  size = 'medium',\n                  loading = false,\n                  disabled = false,\n                  color = 'black',\n                  zeroPadding = false,\n                  fontWeight = 'bold',\n                  ...props\n                }: {\n  children?: any;\n  className?: string;\n  onClick?: Function;\n  layout?: 'solid' | 'ghost' | 'empty';\n  round?: boolean;\n  icon?: string;\n  iconRight?: boolean;\n  iconCircle?: boolean;\n  size?: 'medium' | 'small' | 'large';\n  loading?: boolean;\n  disabled?: boolean;\n  color?: 'black' | 'red';\n  zeroPadding?: boolean;\n  fontWeight?: 'normal' | 'bold';\n  [key: string]: any;\n}) => {\n  return (\n    <button\n      {...props}\n      disabled={disabled}\n      className={cn(\n        className,\n        styles.button,\n        styles[`type-${layout}`],\n        styles[`size-${size}`],\n        styles[`color-${color}`],\n        styles[`fontWeight-${fontWeight}`],\n        {\n          [styles.isRound]: round,\n          [styles.isLoading]: loading,\n          [styles.isDisabled]: disabled,\n          [styles.zeropadding]: zeroPadding,\n        },\n      )}\n      onClick={() => onClick()}\n    >\n      <Loader className={styles.loader} />\n      {icon !== '' && !iconRight && (\n        <Icon\n          className={cn(styles.icon, styles.iconLeft)}\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n      <span className={styles.content}>{children}</span>\n      {icon !== '' && iconRight && (\n        <Icon\n          className={cn(styles.icon, styles.iconRight)}\n          icon={icon}\n          circle={iconCircle}\n        />\n      )}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}