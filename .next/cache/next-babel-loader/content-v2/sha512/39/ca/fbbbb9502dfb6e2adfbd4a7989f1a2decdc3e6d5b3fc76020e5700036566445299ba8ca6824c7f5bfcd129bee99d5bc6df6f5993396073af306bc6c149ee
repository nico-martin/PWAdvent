{"ast":null,"code":"export const zeroPad = (number, length) => number.toString().padStart(length, '0');\nexport const isDev = process && true;\nexport const windowResize = () => {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n};\nexport const getRandomNumber = (min, max) => Math.random() * (max - min) + min;\nexport const untrailingSlashIt = str => str.replace(/\\/$/, '');\nexport const trailingSlashIt = str => untrailingSlashIt(str) + '/';\nexport const shuffle = items => {\n  const recur = (arr, currentIndex) => {\n    if (currentIndex === 0) {\n      return arr;\n    }\n\n    const randomIndex = Math.floor(Math.random() * currentIndex);\n    const swap = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = swap;\n    return recur(arr, currentIndex - 1);\n  };\n\n  return recur(items.map(x => x), items.length - 1);\n};\nexport const urlB64ToUint8Array = base64String => {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n};\nconst PLATFORM = false ? navigator.platform : null;\nconst USER_AGENT = false ? navigator.userAgent : '';\nexport const isIos = ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) || navigator.userAgent.includes('Mac') && 'ontouchend' in document;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/utils/helpers.tsx"],"names":["zeroPad","number","length","toString","padStart","isDev","process","windowResize","vh","window","innerHeight","document","documentElement","style","setProperty","getRandomNumber","min","max","Math","random","untrailingSlashIt","str","replace","trailingSlashIt","shuffle","items","recur","arr","currentIndex","randomIndex","floor","swap","map","x","urlB64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","i","charCodeAt","PLATFORM","navigator","platform","USER_AGENT","userAgent","isIos","includes"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport const zeroPad = (number: number, length: number): string =>\n  number.toString().padStart(length, '0');\n\nexport const isDev: boolean = process && process.env.NODE_ENV === 'development';\n\nexport const windowResize = () => {\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n};\n\nexport const getRandomNumber = (min, max) => Math.random() * (max - min) + min;\n\nexport const untrailingSlashIt = (str: string): string =>\n  str.replace(/\\/$/, '');\n\nexport const trailingSlashIt = (str: string): string =>\n  untrailingSlashIt(str) + '/';\n\nexport const shuffle = (items: Array<any>) => {\n  const recur = (arr, currentIndex) => {\n    if (currentIndex === 0) {\n      return arr;\n    }\n    const randomIndex = Math.floor(Math.random() * currentIndex);\n    const swap = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = swap;\n    return recur(arr, currentIndex - 1);\n  };\n  return recur(\n    items.map((x) => x),\n    items.length - 1\n  );\n};\n\nexport const urlB64ToUint8Array = (base64String) => {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n};\n\nconst PLATFORM = typeof window !== 'undefined' ? navigator.platform : null;\nconst USER_AGENT = typeof window !== 'undefined' ? navigator.userAgent : '';\n\nexport const isIos =\n  [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod',\n  ].includes(navigator.platform) ||\n  (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\n"]},"metadata":{},"sourceType":"module"}