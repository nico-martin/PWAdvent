{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\components\\\\About\\\\EmailSignup.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Form, FormControls, FormField, FormFieldset, InputText, Notification } from '@theme';\nimport cn from '@utils/classnames';\nimport { apiBase } from '@utils/constants';\nimport styles from './EmailSignup.module.css';\n\nconst EmailSignup = ({\n  className = ''\n}) => {\n  const [loading, setLoading] = React.useState(false);\n  const [formSuccess, setFormSuccess] = React.useState('');\n  const [formError, setFormError] = React.useState('');\n  return __jsx(\"div\", {\n    className: cn(className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: cn(styles.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Are you excited for Progressive Web Apps? Let's get ready for PWAdvent! 24 features in 24 days.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Make sure to subscribe and get notified as soon as a new feature is published.\")), formError !== '' ? __jsx(Notification, {\n    className: cn(styles.notification),\n    type: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, formError) : formSuccess !== '' ? __jsx(Notification, {\n    className: cn(styles.notification),\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, formSuccess) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    className: cn(styles.form),\n    onSubmit: async data => {\n      setLoading(true);\n      setFormSuccess('');\n      setFormError('');\n\n      try {\n        const resp = await fetch(`${apiBase}wp-json/advent-calendar/v1/email-notification/`, {\n          method: 'post',\n          body: JSON.stringify({\n            email: data.email,\n            timezoneOffset: new Date().getTimezoneOffset()\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (resp.status === 409) {\n          setFormSuccess('Thank you very much. Your email has already been registered.');\n        } else if (resp.status === 200) {\n          setFormSuccess('Thank you very much. You will receive an email shortly, in which you can confirm your address');\n        } else {\n          new Error();\n        }\n      } catch (e) {\n        setFormError('Oops.. Something went wrong. Please try again later.');\n      }\n\n      setLoading(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(FormFieldset, {\n    stacked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(FormField, {\n    name: \"email\",\n    label: \"Email\",\n    component: InputText,\n    disabled: loading,\n    type: \"email\",\n    register: {\n      required: 'This value is required',\n      pattern: {\n        value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        message: 'This needs to be a valid Email adress'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), __jsx(FormControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    loading: loading,\n    disabled: loading,\n    icon: \"mdi/send\",\n    iconRight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Submit\")))), __jsx(\"p\", {\n    className: cn(styles.disclaimer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"We use your email exclusively to send you the link to the published entry every morning between 2020-12-01 and 2020-12-24. You can cancel this service at any time, your data will not be passed on to third parties.\")));\n};\n\nexport default EmailSignup;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/components/About/EmailSignup.tsx"],"names":["React","Button","Form","FormControls","FormField","FormFieldset","InputText","Notification","cn","apiBase","styles","EmailSignup","className","loading","setLoading","useState","formSuccess","setFormSuccess","formError","setFormError","content","notification","form","data","resp","fetch","method","body","JSON","stringify","email","timezoneOffset","Date","getTimezoneOffset","headers","status","Error","e","required","pattern","value","message","disclaimer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Form,\n  FormControls,\n  FormField,\n  FormFieldset,\n  InputText,\n  Notification,\n} from '@theme';\nimport cn from '@utils/classnames';\nimport { apiBase } from '@utils/constants';\nimport styles from './EmailSignup.module.css';\n\nconst EmailSignup = ({ className = '' }: { className?: string }) => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [formSuccess, setFormSuccess] = React.useState<string>('');\n  const [formError, setFormError] = React.useState<string>('');\n\n  return (\n    <div className={cn(className)}>\n      <div className={cn(styles.content)}>\n        <p>\n          Are you excited for Progressive Web Apps? Let's get ready for\n          PWAdvent! 24 features in 24 days.\n        </p>\n        <p>\n          Make sure to subscribe and get notified as soon as a new feature is\n          published.\n        </p>\n      </div>\n      {formError !== '' ? (\n        <Notification className={cn(styles.notification)} type=\"error\">\n          {formError}\n        </Notification>\n      ) : formSuccess !== '' ? (\n        <Notification className={cn(styles.notification)} type=\"success\">\n          {formSuccess}\n        </Notification>\n      ) : (\n        <React.Fragment>\n          <Form\n            className={cn(styles.form)}\n            onSubmit={async (data) => {\n              setLoading(true);\n              setFormSuccess('');\n              setFormError('');\n\n              try {\n                const resp = await fetch(\n                  `${apiBase}wp-json/advent-calendar/v1/email-notification/`,\n                  {\n                    method: 'post',\n                    body: JSON.stringify({\n                      email: data.email,\n                      timezoneOffset: new Date().getTimezoneOffset(),\n                    }),\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                  }\n                );\n                if (resp.status === 409) {\n                  setFormSuccess(\n                    'Thank you very much. Your email has already been registered.'\n                  );\n                } else if (resp.status === 200) {\n                  setFormSuccess(\n                    'Thank you very much. You will receive an email shortly, in which you can confirm your address'\n                  );\n                } else {\n                  new Error();\n                }\n              } catch (e) {\n                setFormError(\n                  'Oops.. Something went wrong. Please try again later.'\n                );\n              }\n              setLoading(false);\n            }}\n          >\n            <FormFieldset stacked>\n              <FormField\n                name=\"email\"\n                label=\"Email\"\n                component={InputText}\n                disabled={loading}\n                type=\"email\"\n                register={{\n                  required: 'This value is required',\n                  pattern: {\n                    value:\n                      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: 'This needs to be a valid Email adress',\n                  },\n                }}\n              />\n              <FormControls>\n                <Button\n                  type=\"submit\"\n                  loading={loading}\n                  disabled={loading}\n                  icon=\"mdi/send\"\n                  iconRight\n                >\n                  Submit\n                </Button>\n              </FormControls>\n            </FormFieldset>\n          </Form>\n          <p className={cn(styles.disclaimer)}>\n            We use your email exclusively to send you the link to the published\n            entry every morning between 2020-12-01 and 2020-12-24. You can\n            cancel this service at any time, your data will not be passed on to\n            third parties.\n          </p>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default EmailSignup;\n"]},"metadata":{},"sourceType":"module"}