{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\components\\\\Calendar\\\\CalendarDayList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Link from 'next/link';\nimport React from 'react';\nimport { useStoreState } from 'unistore-hooks';\nimport { DATE_TODAY } from '@utils/calendar';\nimport cn from '@utils/classnames';\nimport { SUBJECTS } from '@utils/constants';\nimport dayjs from '@utils/dayjs';\nimport styles from './CalendarDayList.module.css';\n\nconst CalendarDay = ({\n  day,\n  className = ''\n}) => {\n  const {\n    days: storeDays\n  } = useStoreState(['days']);\n  const dayObject = React.useMemo(() => storeDays[day], [storeDays[day], day]);\n  const isActive = React.useMemo(() => !dayjs(dayObject.data.date).isAfter(DATE_TODAY), [dayObject]);\n\n  const Wrapper = (_ref) => {\n    let {\n      children\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"children\"]);\n\n    if (isActive) {\n      return __jsx(Link, {\n        href: `/day/${day}/`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), children));\n    } else {\n      return __jsx(\"div\", _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      }), children);\n    }\n  };\n\n  return __jsx(Wrapper, {\n    className: cn(className, styles.root, {\n      [styles.rootActive]: isActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: styles.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, day), __jsx(\"span\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, SUBJECTS[day - 1]));\n};\n\nconst CalendarDayWrapper = ({\n  day,\n  className = ''\n}) => __jsx(\"div\", {\n  className: cn(className, styles.wrapper),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }\n}, __jsx(CalendarDay, {\n  day: day,\n  className: cn(styles.wrapperInner),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }\n}));\n\nexport default CalendarDayWrapper;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/components/Calendar/CalendarDayList.tsx"],"names":["Link","React","useStoreState","DATE_TODAY","cn","SUBJECTS","dayjs","styles","CalendarDay","day","className","days","storeDays","dayObject","useMemo","isActive","data","date","isAfter","Wrapper","children","props","root","rootActive","number","title","CalendarDayWrapper","wrapper","wrapperInner"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,GADmB;AAEnBC,EAAAA,SAAS,GAAG;AAFO,CAAD,KAMd;AACJ,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAsBV,aAAa,CAAQ,CAAC,MAAD,CAAR,CAAzC;AAEA,QAAMW,SAAS,GAAGZ,KAAK,CAACa,OAAN,CAAc,MAAMF,SAAS,CAACH,GAAD,CAA7B,EAAoC,CAACG,SAAS,CAACH,GAAD,CAAV,EAAiBA,GAAjB,CAApC,CAAlB;AACA,QAAMM,QAAQ,GAAGd,KAAK,CAACa,OAAN,CACf,MAAM,CAACR,KAAK,CAACO,SAAS,CAACG,IAAV,CAAeC,IAAhB,CAAL,CAA2BC,OAA3B,CAAmCf,UAAnC,CADQ,EAEf,CAACU,SAAD,CAFe,CAAjB;;AAKA,QAAMM,OAAO,GAAG,UAMV;AAAA,QANW;AACfC,MAAAA;AADe,KAMX;AAAA,QAJDC,KAIC;;AACJ,QAAIN,QAAJ,EAAc;AACZ,aACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAG,QAAON,GAAI,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,wBAAOY,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAeD,QAAf,CADF,CADF;AAKD,KAND,MAMO;AACL,aAAO,0BAASC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiBD,QAAjB,CAAP;AACD;AACF,GAhBD;;AAkBA,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEhB,EAAE,CAACM,SAAD,EAAYH,MAAM,CAACe,IAAnB,EAAyB;AACpC,OAACf,MAAM,CAACgB,UAAR,GAAqBR;AADe,KAAzB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAM,IAAA,SAAS,EAAER,MAAM,CAACiB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCf,GAAjC,CALF,EAME;AAAM,IAAA,SAAS,EAAEF,MAAM,CAACkB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCpB,QAAQ,CAACI,GAAG,GAAG,CAAP,CAAxC,CANF,CADF;AAUD,CA3CD;;AA6CA,MAAMiB,kBAAkB,GAAG,CAAC;AAC1BjB,EAAAA,GAD0B;AAE1BC,EAAAA,SAAS,GAAG;AAFc,CAAD,KAOzB;AAAK,EAAA,SAAS,EAAEN,EAAE,CAACM,SAAD,EAAYH,MAAM,CAACoB,OAAnB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,WAAD;AAAa,EAAA,GAAG,EAAElB,GAAlB;AAAuB,EAAA,SAAS,EAAEL,EAAE,CAACG,MAAM,CAACqB,YAAR,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAPF;;AAYA,eAAeF,kBAAf","sourcesContent":["import Link from 'next/link';\nimport React from 'react';\nimport { useStoreState } from 'unistore-hooks';\nimport { State } from '@store/types';\nimport { DATE_TODAY } from '@utils/calendar';\nimport cn from '@utils/classnames';\nimport { SUBJECTS } from '@utils/constants';\nimport dayjs from '@utils/dayjs';\nimport styles from './CalendarDayList.module.css';\n\nconst CalendarDay = ({\n  day,\n  className = '',\n}: {\n  day: number;\n  className?: string;\n}) => {\n  const { days: storeDays } = useStoreState<State>(['days']);\n\n  const dayObject = React.useMemo(() => storeDays[day], [storeDays[day], day]);\n  const isActive = React.useMemo(\n    () => !dayjs(dayObject.data.date).isAfter(DATE_TODAY),\n    [dayObject]\n  );\n\n  const Wrapper = ({\n    children,\n    ...props\n  }: {\n    children: any;\n    [key: string]: any;\n  }) => {\n    if (isActive) {\n      return (\n        <Link href={`/day/${day}/`}>\n          <a {...props}>{children}</a>\n        </Link>\n      );\n    } else {\n      return <div {...props}>{children}</div>;\n    }\n  };\n\n  return (\n    <Wrapper\n      className={cn(className, styles.root, {\n        [styles.rootActive]: isActive,\n      })}\n    >\n      <span className={styles.number}>{day}</span>\n      <span className={styles.title}>{SUBJECTS[day - 1]}</span>\n    </Wrapper>\n  );\n};\n\nconst CalendarDayWrapper = ({\n  day,\n  className = '',\n}: {\n  day: number;\n  className?: string;\n}) => (\n  <div className={cn(className, styles.wrapper)}>\n    <CalendarDay day={day} className={cn(styles.wrapperInner)} />\n  </div>\n);\n\nexport default CalendarDayWrapper;\n"]},"metadata":{},"sourceType":"module"}