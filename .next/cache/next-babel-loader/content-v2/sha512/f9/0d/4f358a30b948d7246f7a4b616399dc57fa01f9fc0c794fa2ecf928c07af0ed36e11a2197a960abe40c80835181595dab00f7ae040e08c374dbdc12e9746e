{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\components\\\\Calendar\\\\CalendarDay.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Link from 'next/link';\nimport React from 'react';\nimport { useStoreState } from 'unistore-hooks';\nimport { SVG } from '@theme';\nimport { DATE_TODAY } from '@utils/calendar';\nimport cn from '@utils/classnames';\nimport dayjs from '@utils/dayjs';\nimport { zeroPad } from '@utils/helpers';\nimport styles from './CalendarDay.module.css';\n\nconst CalendarDay = ({\n  day,\n  className = ''\n}) => {\n  const {\n    days: storeDays\n  } = useStoreState(['days']);\n  const dayObject = React.useMemo(() => storeDays[day], [storeDays[day], day]);\n  const isActive = React.useMemo(() => !dayjs(dayObject.data.date).isAfter(DATE_TODAY), [dayObject]);\n\n  const Wrapper = (_ref) => {\n    let {\n      children\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return isActive ? __jsx(Link, {\n      href: `/day/${day}/`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), children)) : __jsx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }), children);\n  };\n\n  return __jsx(Wrapper, {\n    className: cn(className, styles.day, {\n      [styles.dayActive]: isActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, day));\n};\n\nconst CalendarDayWrapper = ({\n  day,\n  className = ''\n}) => __jsx(\"div\", {\n  className: cn(className, styles.wrapper),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }\n}, __jsx(SVG, {\n  className: cn(styles.snow, styles[`snow--${day}`]),\n  path: `snowwall-${zeroPad(day, 2)}.svg`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}), __jsx(CalendarDay, {\n  day: day,\n  className: cn(styles.inner),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }\n}));\n\nexport default CalendarDayWrapper;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/components/Calendar/CalendarDay.tsx"],"names":["Link","React","useStoreState","SVG","DATE_TODAY","cn","dayjs","zeroPad","styles","CalendarDay","day","className","days","storeDays","dayObject","useMemo","isActive","data","date","isAfter","Wrapper","children","props","dayActive","inner","CalendarDayWrapper","wrapper","snow"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,GAAT,QAAoB,QAApB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,GADmB;AAEnBC,EAAAA,SAAS,GAAG;AAFO,CAAD,KAMd;AACJ,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAsBX,aAAa,CAAQ,CAAC,MAAD,CAAR,CAAzC;AAEA,QAAMY,SAAS,GAAGb,KAAK,CAACc,OAAN,CAAc,MAAMF,SAAS,CAACH,GAAD,CAA7B,EAAoC,CAACG,SAAS,CAACH,GAAD,CAAV,EAAiBA,GAAjB,CAApC,CAAlB;AACA,QAAMM,QAAQ,GAAGf,KAAK,CAACc,OAAN,CACf,MAAM,CAACT,KAAK,CAACQ,SAAS,CAACG,IAAV,CAAeC,IAAhB,CAAL,CAA2BC,OAA3B,CAAmCf,UAAnC,CADQ,EAEf,CAACU,SAAD,CAFe,CAAjB;;AAKA,QAAMM,OAAO,GAAG;AAAA,QAAC;AACfC,MAAAA;AADe,KAAD;AAAA,QAEXC,KAFW;;AAAA,WAOdN,QAAQ,GACN,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,QAAON,GAAI,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,wBAAOY,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAeD,QAAf,CADF,CADM,GAKN,0BAASC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAiBD,QAAjB,CAZY;AAAA,GAAhB;;AAeA,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEhB,EAAE,CAACM,SAAD,EAAYH,MAAM,CAACE,GAAnB,EAAwB;AACnC,OAACF,MAAM,CAACe,SAAR,GAAoBP;AADe,KAAxB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACgB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bd,GAA/B,CALF,CADF;AASD,CAvCD;;AAyCA,MAAMe,kBAAkB,GAAG,CAAC;AAC1Bf,EAAAA,GAD0B;AAE1BC,EAAAA,SAAS,GAAG;AAFc,CAAD,KAOzB;AAAK,EAAA,SAAS,EAAEN,EAAE,CAACM,SAAD,EAAYH,MAAM,CAACkB,OAAnB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,GAAD;AACE,EAAA,SAAS,EAAErB,EAAE,CAACG,MAAM,CAACmB,IAAR,EAAcnB,MAAM,CAAE,SAAQE,GAAI,EAAd,CAApB,CADf;AAEE,EAAA,IAAI,EAAG,YAAWH,OAAO,CAACG,GAAD,EAAM,CAAN,CAAS,MAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAKE,MAAC,WAAD;AAAa,EAAA,GAAG,EAAEA,GAAlB;AAAuB,EAAA,SAAS,EAAEL,EAAE,CAACG,MAAM,CAACgB,KAAR,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CAPF;;AAgBA,eAAeC,kBAAf","sourcesContent":["import Link from 'next/link';\nimport React from 'react';\nimport { useStoreState } from 'unistore-hooks';\nimport { SVG } from '@theme';\nimport { State } from '@store/types';\nimport { DATE_TODAY } from '@utils/calendar';\nimport cn from '@utils/classnames';\nimport dayjs from '@utils/dayjs';\nimport { zeroPad } from '@utils/helpers';\nimport styles from './CalendarDay.module.css';\n\nconst CalendarDay = ({\n  day,\n  className = '',\n}: {\n  day: number;\n  className?: string;\n}) => {\n  const { days: storeDays } = useStoreState<State>(['days']);\n\n  const dayObject = React.useMemo(() => storeDays[day], [storeDays[day], day]);\n  const isActive = React.useMemo(\n    () => !dayjs(dayObject.data.date).isAfter(DATE_TODAY),\n    [dayObject]\n  );\n\n  const Wrapper = ({\n    children,\n    ...props\n  }: {\n    children: any;\n    [key: string]: any;\n  }) =>\n    isActive ? (\n      <Link href={`/day/${day}/`}>\n        <a {...props}>{children}</a>\n      </Link>\n    ) : (\n      <div {...props}>{children}</div>\n    );\n\n  return (\n    <Wrapper\n      className={cn(className, styles.day, {\n        [styles.dayActive]: isActive,\n      })}\n    >\n      <div className={styles.inner}>{day}</div>\n    </Wrapper>\n  );\n};\n\nconst CalendarDayWrapper = ({\n  day,\n  className = '',\n}: {\n  day: number;\n  className?: string;\n}) => (\n  <div className={cn(className, styles.wrapper)}>\n    <SVG\n      className={cn(styles.snow, styles[`snow--${day}`])}\n      path={`snowwall-${zeroPad(day, 2)}.svg`}\n    />\n    <CalendarDay day={day} className={cn(styles.inner)} />\n  </div>\n);\n\nexport default CalendarDayWrapper;\n"]},"metadata":{},"sourceType":"module"}