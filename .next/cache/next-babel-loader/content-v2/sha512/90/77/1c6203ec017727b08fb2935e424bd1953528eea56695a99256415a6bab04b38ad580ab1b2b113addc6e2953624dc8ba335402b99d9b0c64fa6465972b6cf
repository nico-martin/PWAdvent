{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Form\\\\Form.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { useForm, FormContext } from 'react-hook-form';\n\nconst Form = (_ref) => {\n  let {\n    onSubmit,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"onSubmit\", \"className\", \"children\"]);\n\n  // @ts-ignore\n  const methods = useForm();\n  return __jsx(FormContext, _extends({}, methods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), __jsx(\"form\", _extends({\n    onSubmit: methods.handleSubmit(v => onSubmit(v)),\n    className: `${className} form`\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), children));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Form/Form.tsx"],"names":["React","useForm","FormContext","Form","onSubmit","className","children","props","methods","handleSubmit","v"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;;AAEA,MAAMC,IAAI,GAAG,UASP;AAAA,MATQ;AACZC,IAAAA,QADY;AAEZC,IAAAA,SAFY;AAGZC,IAAAA;AAHY,GASR;AAAA,MALDC,KAKC;;AACJ;AACA,QAAMC,OAAO,GAAGP,OAAO,EAAvB;AAEA,SACE,MAAC,WAAD,eAAiBO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AACE,IAAA,QAAQ,EAAEA,OAAO,CAACC,YAAR,CAAsBC,CAAD,IAAON,QAAQ,CAACM,CAAD,CAApC,CADZ;AAEE,IAAA,SAAS,EAAG,GAAEL,SAAU;AAF1B,KAGME,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGD,QALH,CADF,CADF;AAWD,CAxBD;;AA0BA,eAAeH,IAAf","sourcesContent":["import React from 'react';\r\nimport { useForm, FormContext } from 'react-hook-form';\r\n\r\nconst Form = ({\r\n  onSubmit,\r\n  className,\r\n  children,\r\n  ...props\r\n}: {\r\n  onSubmit: Function;\r\n  className?: string;\r\n  children?: any;\r\n}) => {\r\n  // @ts-ignore\r\n  const methods = useForm();\r\n\r\n  return (\r\n    <FormContext {...methods}>\r\n      <form\r\n        onSubmit={methods.handleSubmit((v) => onSubmit(v))}\r\n        className={`${className} form`}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </form>\r\n    </FormContext>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}