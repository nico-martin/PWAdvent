{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\ContentModal\\\\ContentModal.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport cn from '@utils/classnames';\nimport { metaTitle } from '@utils/metas';\nimport { Loader, ShadowBox } from '../index';\nimport styles from './ContentModal.module.css';\n\nvar ContentModal = function ContentModal(_ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      onClose = _ref.onClose,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      _ref$full = _ref.full,\n      full = _ref$full === void 0 ? true : _ref$full;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, __jsx(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, metaTitle(title))), __jsx(ShadowBox, {\n    title: title,\n    close: onClose,\n    className: cn(className),\n    size: full ? 'large' : 'small',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, loading ? __jsx(Loader, {\n    className: styles.loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }\n  }) : children)));\n};\n\n_c = ContentModal;\nexport default ContentModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentModal\");","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/ContentModal/ContentModal.tsx"],"names":["React","Helmet","cn","metaTitle","Loader","ShadowBox","styles","ContentModal","title","children","onClose","className","loading","full","content","loader"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,UAAlC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MACnBC,KADmB,QACnBA,KADmB;AAAA,MAEnBC,QAFmB,QAEnBA,QAFmB;AAAA,MAGnBC,OAHmB,QAGnBA,OAHmB;AAAA,4BAInBC,SAJmB;AAAA,MAInBA,SAJmB,+BAIP,EAJO;AAAA,0BAKnBC,OALmB;AAAA,MAKnBA,OALmB,6BAKT,KALS;AAAA,uBAMnBC,IANmB;AAAA,MAMnBA,IANmB,0BAMZ,IANY;AAAA,SAenB,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQV,SAAS,CAACK,KAAD,CAAjB,CADF,CADF,EAIE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,KAAK,EAAEE,OAFT;AAGE,IAAA,SAAS,EAAER,EAAE,CAACS,SAAD,CAHf;AAIE,IAAA,IAAI,EAAEE,IAAI,GAAG,OAAH,GAAa,OAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GAAG,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEN,MAAM,CAACS,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA0CN,QADpD,CANF,CAJF,CAfmB;AAAA,CAArB;;KAAMF,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport cn from '@utils/classnames';\nimport { metaTitle } from '@utils/metas';\nimport { Loader, ShadowBox } from '../index';\nimport styles from './ContentModal.module.css';\n\nconst ContentModal = ({\n  title,\n  children,\n  onClose,\n  className = '',\n  loading = false,\n  full = true,\n}: {\n  title: string;\n  children?: React.JSX.Element | React.JSX.Element[] | string;\n  onClose: Function;\n  className?: string;\n  loading?: boolean;\n  full?: boolean;\n}) => (\n  <React.Fragment>\n    <Helmet>\n      <title>{metaTitle(title)}</title>\n    </Helmet>\n    <ShadowBox\n      title={title}\n      close={onClose}\n      className={cn(className)}\n      size={full ? 'large' : 'small'}\n    >\n      <div className={styles.content}>\n        {loading ? <Loader className={styles.loader} /> : children}\n      </div>\n    </ShadowBox>\n  </React.Fragment>\n);\n\nexport default ContentModal;\n"]},"metadata":{},"sourceType":"module"}