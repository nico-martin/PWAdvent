{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\components\\\\About\\\\PushNotifications.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Notification, SVG } from '@theme';\nimport cn from '@utils/classnames';\nimport { apiBase } from '@utils/constants';\nimport { isIos, urlB64ToUint8Array } from '@utils/helpers';\nimport styles from './PushNotifications.module.css';\n\nconst PushNotifications = ({\n  className = ''\n}) => {\n  const [error, setError] = React.useState('');\n  const [isSubscribed, setIsSubscribed] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const supportsPush = 'PushManager' in window && 'serviceWorker' in navigator;\n  React.useEffect(() => {\n    (async function effect() {\n      if (window.Notification.permission === 'denied') {\n        setError('It looks like you already explicitly denied permission for pwadvent.dev to display system notifications. Please change this option in the site settings and reload this page.');\n        return;\n      }\n\n      const reg = await navigator.serviceWorker.getRegistration();\n      const subscription = await reg.pushManager.getSubscription();\n\n      if (subscription) {\n        await sendSubscription(subscription.toJSON());\n        setIsSubscribed(true);\n      }\n    })();\n  }, []);\n\n  const getVapidKey = async () => {\n    let key = '';\n    const resp = await fetch(`${apiBase}wp-json/advent-calendar/v1/web-push/public-key`);\n\n    if (resp.ok) {\n      const respJson = await resp.json();\n      key = respJson.publicKey;\n    }\n\n    return key;\n  };\n\n  const subscribe = async () => {\n    setLoading(true);\n    const reg = await navigator.serviceWorker.getRegistration();\n    const vapidKey = await getVapidKey();\n\n    if (vapidKey === '') {\n      alert('something went wrong. Could not connect to the push server');\n    }\n\n    const subscription = await reg.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: new Uint8Array(urlB64ToUint8Array(vapidKey))\n    });\n    await sendSubscription(subscription.toJSON());\n    setLoading(false);\n    setIsSubscribed(true);\n  };\n\n  const unsubscribe = async () => {\n    setLoading(true);\n    const reg = await navigator.serviceWorker.getRegistration();\n    const subscription = await reg.pushManager.getSubscription();\n    await sendDeleteSubscription(subscription.toJSON());\n    await subscription.unsubscribe();\n    setLoading(false);\n    setIsSubscribed(false);\n  };\n\n  const sendSubscription = async (subscription) => fetch(`${apiBase}wp-json/advent-calendar/v1/web-push/subscription/`, {\n    method: 'post',\n    body: JSON.stringify({\n      subscription: subscription,\n      timezoneOffset: new Date().getTimezoneOffset()\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  const sendDeleteSubscription = async (subscription) => fetch(`${apiBase}wp-json/advent-calendar/v1/web-push/subscription/`, {\n    method: 'delete',\n    body: JSON.stringify({\n      subscription: subscription\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  return __jsx(\"div\", {\n    className: cn(className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: styles.about,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Never miss a feature again!\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), \"Subscribe to push notifications and receive a daily notification when the new window opens.\"), __jsx(\"div\", {\n    className: styles.feedback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, error !== '' ? __jsx(Notification, {\n    type: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, error)) : !supportsPush ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(Notification, {\n    type: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Your browser does not support web push notifications.\")), isIos && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), \"Unfortunately, \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 32\n    }\n  }, \"Apple\"), \" tries to hold back the further development of rich web applications by\", ' ', __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"not implementing features like web push into iOS.\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), \"It is now up to us to build pressure by\", ' ', __jsx(\"a\", {\n    href: \"https://bugs.webkit.org/show_bug.cgi?id=182566\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"describing our usecase\"), ' ', \"and/or\", ' ', __jsx(\"a\", {\n    href: \"https://www.change.org/p/tim-cook-apple-inc-implement-web-push-notifications-on-ios-devices?utm_content=cl_sharecopy_18178670_fr-FR%3Av1&recruiter=1092330168&recruited_by_id=76293570-9ba6-11ea-bd01-e5d39501339a&utm_source=share_petition&utm_medium=copylink&utm_campaign=psf_combo_share_initial&utm_term=share_petition\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"making ourselves heard\"), \".\")) : !isSubscribed ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    icon: \"mdi/bell\",\n    onClick: () => subscribe(),\n    color: \"red\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Subscribe\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    className: \"fs--xsmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"From the first to the 24th of december 2020 we will send you a link to the latest article every morning. You are able to unsubscribe at any time here\")) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: styles.checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, __jsx(SVG, {\n    path: \"icon/mdi/check.svg\",\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }), ' ', __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Push notifications are activated\")), __jsx(Button, {\n    layout: \"ghost\",\n    size: \"small\",\n    icon: \"mdi/bell-outline\",\n    round: true,\n    onClick: () => unsubscribe(),\n    loading: loading,\n    fontWeight: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Unsubscribe\"))));\n};\n\nexport default PushNotifications;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/components/About/PushNotifications.tsx"],"names":["React","Button","Notification","SVG","cn","apiBase","isIos","urlB64ToUint8Array","styles","PushNotifications","className","error","setError","useState","isSubscribed","setIsSubscribed","loading","setLoading","supportsPush","window","navigator","useEffect","effect","permission","reg","serviceWorker","getRegistration","subscription","pushManager","getSubscription","sendSubscription","toJSON","getVapidKey","key","resp","fetch","ok","respJson","json","publicKey","subscribe","vapidKey","alert","userVisibleOnly","applicationServerKey","Uint8Array","unsubscribe","sendDeleteSubscription","method","body","JSON","stringify","timezoneOffset","Date","getTimezoneOffset","headers","about","feedback","checked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useStoreState } from 'unistore-hooks';\nimport { Button, Loader, Notification, SVG } from '@theme';\nimport { State } from '@store/types';\nimport cn from '@utils/classnames';\nimport { apiBase } from '@utils/constants';\nimport { isIos, urlB64ToUint8Array } from '@utils/helpers';\nimport styles from './PushNotifications.module.css';\n\nconst PushNotifications = ({ className = '' }: { className?: string }) => {\n  const [error, setError] = React.useState<string>('');\n  const [isSubscribed, setIsSubscribed] = React.useState<boolean>(false);\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const supportsPush = 'PushManager' in window && 'serviceWorker' in navigator;\n\n  React.useEffect(() => {\n    (async function effect() {\n      if (window.Notification.permission === 'denied') {\n        setError(\n          'It looks like you already explicitly denied permission for pwadvent.dev to display system notifications. Please change this option in the site settings and reload this page.'\n        );\n        return;\n      }\n\n      const reg = await navigator.serviceWorker.getRegistration();\n      const subscription = await reg.pushManager.getSubscription();\n      if (subscription) {\n        await sendSubscription(subscription.toJSON());\n        setIsSubscribed(true);\n      }\n    })();\n  }, []);\n\n  const getVapidKey = async () => {\n    let key = '';\n    const resp = await fetch(\n      `${apiBase}wp-json/advent-calendar/v1/web-push/public-key`\n    );\n\n    if (resp.ok) {\n      const respJson = await resp.json();\n      key = respJson.publicKey;\n    }\n    return key;\n  };\n\n  const subscribe = async () => {\n    setLoading(true);\n    const reg = await navigator.serviceWorker.getRegistration();\n    const vapidKey = await getVapidKey();\n    if (vapidKey === '') {\n      alert('something went wrong. Could not connect to the push server');\n    }\n    const subscription = await reg.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: new Uint8Array(urlB64ToUint8Array(vapidKey)),\n    });\n    await sendSubscription(subscription.toJSON());\n    setLoading(false);\n    setIsSubscribed(true);\n  };\n\n  const unsubscribe = async () => {\n    setLoading(true);\n    const reg = await navigator.serviceWorker.getRegistration();\n    const subscription = await reg.pushManager.getSubscription();\n    await sendDeleteSubscription(subscription.toJSON());\n    await subscription.unsubscribe();\n    setLoading(false);\n    setIsSubscribed(false);\n  };\n\n  const sendSubscription = async (subscription: PushSubscriptionJSON) =>\n    fetch(`${apiBase}wp-json/advent-calendar/v1/web-push/subscription/`, {\n      method: 'post',\n      body: JSON.stringify({\n        subscription: subscription,\n        timezoneOffset: new Date().getTimezoneOffset(),\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n  const sendDeleteSubscription = async (subscription: PushSubscriptionJSON) =>\n    fetch(`${apiBase}wp-json/advent-calendar/v1/web-push/subscription/`, {\n      method: 'delete',\n      body: JSON.stringify({\n        subscription: subscription,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n  return (\n    <div className={cn(className)}>\n      <p className={styles.about}>\n        <b>Never miss a feature again!</b>\n        <br />\n        Subscribe to push notifications and receive a daily notification when\n        the new window opens.\n      </p>\n      <div className={styles.feedback}>\n        {error !== '' ? (\n          <Notification type=\"error\">\n            <p>{error}</p>\n          </Notification>\n        ) : !supportsPush ? (\n          <React.Fragment>\n            <Notification type=\"error\">\n              <p>Your browser does not support web push notifications.</p>\n            </Notification>\n            {isIos && (\n              <p>\n                <br />\n                Unfortunately, <b>Apple</b> tries to hold back the further\n                development of rich web applications by{' '}\n                <b>not implementing features like web push into iOS.</b>\n                <br />\n                It is now up to us to build pressure by{' '}\n                <a\n                  href=\"https://bugs.webkit.org/show_bug.cgi?id=182566\"\n                  target=\"_blank\"\n                >\n                  describing our usecase\n                </a>{' '}\n                and/or{' '}\n                <a\n                  href=\"https://www.change.org/p/tim-cook-apple-inc-implement-web-push-notifications-on-ios-devices?utm_content=cl_sharecopy_18178670_fr-FR%3Av1&recruiter=1092330168&recruited_by_id=76293570-9ba6-11ea-bd01-e5d39501339a&utm_source=share_petition&utm_medium=copylink&utm_campaign=psf_combo_share_initial&utm_term=share_petition\"\n                  target=\"_blank\"\n                >\n                  making ourselves heard\n                </a>\n                .\n              </p>\n            )}\n          </React.Fragment>\n        ) : !isSubscribed ? (\n          <React.Fragment>\n            <Button\n              icon=\"mdi/bell\"\n              onClick={() => subscribe()}\n              color=\"red\"\n              loading={loading}\n            >\n              Subscribe\n            </Button>\n            <br />\n            <p className=\"fs--xsmall\">\n              From the first to the 24th of december 2020 we will send you a\n              link to the latest article every morning. You are able to\n              unsubscribe at any time here\n            </p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p className={styles.checked}>\n              <SVG path=\"icon/mdi/check.svg\" inline />{' '}\n              <b>Push notifications are activated</b>\n            </p>\n            <Button\n              layout=\"ghost\"\n              size=\"small\"\n              icon=\"mdi/bell-outline\"\n              round\n              onClick={() => unsubscribe()}\n              loading={loading}\n              fontWeight=\"normal\"\n            >\n              Unsubscribe\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PushNotifications;\n"]},"metadata":{},"sourceType":"module"}