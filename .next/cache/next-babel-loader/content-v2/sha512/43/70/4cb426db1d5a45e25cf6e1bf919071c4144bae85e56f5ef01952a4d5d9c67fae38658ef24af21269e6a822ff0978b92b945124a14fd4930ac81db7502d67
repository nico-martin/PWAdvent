{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Form\\\\Input.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cn from '@utils/classnames';\n\nconst Input = (_ref) => {\n  let {\n    name,\n    id,\n    label,\n    className = '',\n    classNameLabel = '',\n    classNameInput = '',\n    type = 'text',\n    subtype = 'text',\n    value: initialValue = '',\n    choices = {},\n    error = '',\n    onChange = () => {},\n    onValueChanged = () => {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"name\", \"id\", \"label\", \"className\", \"classNameLabel\", \"classNameInput\", \"type\", \"subtype\", \"value\", \"choices\", \"error\", \"onChange\", \"onValueChanged\"]);\n\n  const [value, setValue] = React.useState(initialValue);\n  const prevValue = React.useRef(null);\n\n  const inputProps = _objectSpread(_objectSpread({}, props), {}, {\n    className: cn(classNameInput, 'input__element', `input__element--${type}`, `input__element--${value !== '' || type === 'select' && Object.values(choices).length && Object.values(choices)[0] !== '' ? 'value' : 'empty'}`),\n    name,\n    id,\n    onChange: e => {\n      onChange(e);\n      setValue(e.target.value);\n    }\n  });\n\n  React.useEffect(() => {\n    onValueChanged && onValueChanged(value, prevValue.current);\n    prevValue.current = value;\n  }, [value]);\n  return __jsx(\"div\", {\n    className: cn(className, 'input', `input--${type}`, {\n      'input--error': error !== ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    className: cn(classNameLabel, 'input__label'),\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, label), type === 'textarea' && __jsx(\"textarea\", _extends({}, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }), value), type === 'text' && __jsx(\"input\", _extends({\n    type: subtype\n  }, inputProps, value ? {\n    value\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), type === 'select' && __jsx(\"select\", _extends({}, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), Object.entries(choices).map(([key, val]) => __jsx(\"option\", {\n    key: key,\n    selected: key === value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, val))), error !== '' && __jsx(\"span\", {\n    className: \"input__error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 24\n    }\n  }, error));\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Form/Input.tsx"],"names":["React","cn","Input","name","id","label","className","classNameLabel","classNameInput","type","subtype","value","initialValue","choices","error","onChange","onValueChanged","props","setValue","useState","prevValue","useRef","inputProps","Object","values","length","e","target","useEffect","current","entries","map","key","val"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cn from '@utils/classnames';\nimport styles from './Input.module.css';\n\nconst Input = ({\n  name,\n  id,\n  label,\n  className = '',\n  classNameLabel = '',\n  classNameInput = '',\n  type = 'text',\n  subtype = 'text',\n  value: initialValue = '',\n  choices = {},\n  error = '',\n  onChange = () => {},\n  onValueChanged = () => {},\n  ...props\n}: {\n  name: string;\n  id: string;\n  className?: string;\n  classNameLabel?: string;\n  classNameInput?: string;\n  label: string;\n  type?: 'text' | 'textarea' | 'select';\n  subtype?: string;\n  value?: string;\n  choices?: {\n    [k: string]: string;\n  };\n  error?: string;\n  onChange?: Function;\n  onValueChanged?: Function;\n  [k: string]: any;\n}) => {\n  const [value, setValue] = React.useState(initialValue);\n  const prevValue = React.useRef(null);\n\n  const inputProps = {\n    ...props,\n    className: cn(\n      classNameInput,\n      'input__element',\n      `input__element--${type}`,\n      `input__element--${\n        value !== '' ||\n        (type === 'select' &&\n          Object.values(choices).length &&\n          Object.values(choices)[0] !== '')\n          ? 'value'\n          : 'empty'\n      }`\n    ),\n    name,\n    id,\n    onChange: (e) => {\n      onChange(e);\n      setValue(e.target.value);\n    },\n  };\n\n  React.useEffect(() => {\n    onValueChanged && onValueChanged(value, prevValue.current);\n    prevValue.current = value;\n  }, [value]);\n\n  return (\n    <div\n      className={cn(className, 'input', `input--${type}`, {\n        'input--error': error !== '',\n      })}\n    >\n      <label className={cn(classNameLabel, 'input__label')} htmlFor={id}>\n        {label}\n      </label>\n      {type === 'textarea' && <textarea {...inputProps}>{value}</textarea>}\n      {type === 'text' && (\n        <input type={subtype} {...inputProps} {...(value ? { value } : {})} />\n      )}\n      {type === 'select' && (\n        <select {...inputProps}>\n          {Object.entries(choices).map(([key, val]) => (\n            <option key={key} selected={key === value}>\n              {val}\n            </option>\n          ))}\n        </select>\n      )}\n      {error !== '' && <span className=\"input__error\">{error}</span>}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}