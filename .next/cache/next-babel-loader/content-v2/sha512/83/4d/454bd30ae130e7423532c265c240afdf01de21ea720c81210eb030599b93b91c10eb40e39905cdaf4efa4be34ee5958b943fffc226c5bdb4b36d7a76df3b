{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\theme\\\\Form\\\\FormField.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { ConnectForm } from './ConnectForm';\nimport InputText from './Input';\n\nconst FormField = (_ref) => {\n  let {\n    name,\n    label,\n    component = InputText,\n    register: fieldRegister,\n    className = '',\n    classNameLabel = '',\n    classNameInput = '',\n    wide = false\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"name\", \"label\", \"component\", \"register\", \"className\", \"classNameLabel\", \"classNameInput\", \"wide\"]);\n\n  return __jsx(ConnectForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, ({\n    register,\n    errors\n  }) => {\n    return component(_objectSpread(_objectSpread({}, props), {}, {\n      name,\n      id: name,\n      label,\n      ref: register(fieldRegister),\n      className: className,\n      classNameInput: classNameInput,\n      classNameLabel: classNameLabel,\n      error: errors[name] ? errors[name].message : ''\n    }));\n  });\n};\n\nexport default FormField;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/theme/Form/FormField.tsx"],"names":["React","ConnectForm","InputText","FormField","name","label","component","register","fieldRegister","className","classNameLabel","classNameInput","wide","props","errors","id","ref","error","message"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAOC,SAAP,MAAsB,SAAtB;;AAEA,MAAMC,SAAS,GAAG;AAAA,MAAC;AACjBC,IAAAA,IADiB;AAEjBC,IAAAA,KAFiB;AAGjBC,IAAAA,SAAS,GAAGJ,SAHK;AAIjBK,IAAAA,QAAQ,EAAEC,aAJO;AAKjBC,IAAAA,SAAS,GAAG,EALK;AAMjBC,IAAAA,cAAc,GAAG,EANA;AAOjBC,IAAAA,cAAc,GAAG,EAPA;AAQjBC,IAAAA,IAAI,GAAG;AARU,GAAD;AAAA,MASbC,KATa;;AAAA,SAqBhB,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEN,IAAAA,QAAF;AAAYO,IAAAA;AAAZ,GAAD,KAA0B;AACzB,WAAOR,SAAS,iCACXO,KADW;AAEdT,MAAAA,IAFc;AAGdW,MAAAA,EAAE,EAAEX,IAHU;AAIdC,MAAAA,KAJc;AAKdW,MAAAA,GAAG,EAAET,QAAQ,CAACC,aAAD,CALC;AAMdC,MAAAA,SAAS,EAAEA,SANG;AAOdE,MAAAA,cAAc,EAAEA,cAPF;AAQdD,MAAAA,cAAc,EAAEA,cARF;AASdO,MAAAA,KAAK,EAAEH,MAAM,CAACV,IAAD,CAAN,GAAeU,MAAM,CAACV,IAAD,CAAN,CAAac,OAA5B,GAAsC;AAT/B,OAAhB;AAWD,GAbH,CArBgB;AAAA,CAAlB;;AAsCA,eAAef,SAAf","sourcesContent":["import React from 'react';\nimport { ConnectForm } from './ConnectForm';\nimport styles from './FormField.module.css';\nimport InputText from './Input';\n\nconst FormField = ({\n  name,\n  label,\n  component = InputText,\n  register: fieldRegister,\n  className = '',\n  classNameLabel = '',\n  classNameInput = '',\n  wide = false,\n  ...props\n}: {\n  name: string;\n  label: string;\n  component?: any;\n  register?: any;\n  className?: string;\n  classNameLabel?: string;\n  classNameInput?: string;\n  wide?: boolean;\n  [k: string]: any;\n}) => (\n  <ConnectForm>\n    {({ register, errors }) => {\n      return component({\n        ...props,\n        name,\n        id: name,\n        label,\n        ref: register(fieldRegister),\n        className: className,\n        classNameInput: classNameInput,\n        classNameLabel: classNameLabel,\n        error: errors[name] ? errors[name].message : '',\n      });\n    }}\n  </ConnectForm>\n);\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}