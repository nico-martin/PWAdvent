{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Dev\\\\PWAdvent\\\\src\\\\app\\\\Calendar\\\\CalendarDay.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useStoreState } from 'unistore-hooks';\nimport './CalendarDay.css';\nimport cn from '@utils/classnames';\nimport { DATE_TODAY } from '@utils/calendar';\nimport dayjs from '@utils/dayjs';\nimport { SVG } from '@theme';\nimport { zeroPad } from '@utils/helpers';\n\nconst CalendarDay = ({\n  day,\n  className = ''\n}) => {\n  const {\n    days: storeDays\n  } = useStoreState(['days']);\n  const dayObject = React.useMemo(() => storeDays[day], [storeDays[day], day]);\n  const isActive = React.useMemo(() => !dayjs(dayObject.data.date).isAfter(DATE_TODAY), [dayObject]);\n\n  const Wrapper = (_ref) => {\n    let {\n      children\n    } = _ref,\n        props = _objectWithoutProperties(_ref, [\"children\"]);\n\n    return isActive ? __jsx(Link, _extends({\n      to: `/day/${day}/`\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }), children) : __jsx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }), children);\n  };\n\n  return __jsx(Wrapper, {\n    className: cn(className, 'calendar-day', {\n      'calendar-day--active': isActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"calendar-day__inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, day));\n};\n\nconst CalendarDayWrapper = ({\n  day,\n  className = ''\n}) => __jsx(\"div\", {\n  className: cn(className, 'calendar-day-wrapper'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }\n}, __jsx(SVG, {\n  className: cn('calendar-day-wrapper__snow', `calendar-day-wrapper__snow--${day}`),\n  path: `snowwall-${zeroPad(day, 2)}.svg`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n}), __jsx(CalendarDay, {\n  day: day,\n  className: cn('calendar-day-wrapper__inner'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }\n}));\n\nexport default CalendarDayWrapper;","map":{"version":3,"sources":["C:/Users/admin/Documents/Dev/PWAdvent/src/app/Calendar/CalendarDay.tsx"],"names":["React","Link","useStoreState","cn","DATE_TODAY","dayjs","SVG","zeroPad","CalendarDay","day","className","days","storeDays","dayObject","useMemo","isActive","data","date","isAfter","Wrapper","children","props","CalendarDayWrapper"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AAGA,OAAO,mBAAP;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,GADmB;AAEnBC,EAAAA,SAAS,GAAG;AAFO,CAAD,KAMd;AACJ,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAsBV,aAAa,CAAQ,CAAC,MAAD,CAAR,CAAzC;AAEA,QAAMW,SAAS,GAAGb,KAAK,CAACc,OAAN,CAAc,MAAMF,SAAS,CAACH,GAAD,CAA7B,EAAoC,CAACG,SAAS,CAACH,GAAD,CAAV,EAAiBA,GAAjB,CAApC,CAAlB;AACA,QAAMM,QAAQ,GAAGf,KAAK,CAACc,OAAN,CACf,MAAM,CAACT,KAAK,CAACQ,SAAS,CAACG,IAAV,CAAeC,IAAhB,CAAL,CAA2BC,OAA3B,CAAmCd,UAAnC,CADQ,EAEf,CAACS,SAAD,CAFe,CAAjB;;AAKA,QAAMM,OAAO,GAAG;AAAA,QAAC;AACfC,MAAAA;AADe,KAAD;AAAA,QAEXC,KAFW;;AAAA,WAOdN,QAAQ,GACN,MAAC,IAAD;AAAM,MAAA,EAAE,EAAG,QAAON,GAAI;AAAtB,OAA8BY,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGD,QADH,CADM,GAKN,0BAASC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAiBD,QAAjB,CAZY;AAAA,GAAhB;;AAeA,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEjB,EAAE,CAACO,SAAD,EAAY,cAAZ,EAA4B;AACvC,8BAAwBK;AADe,KAA5B,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCN,GAAtC,CALF,CADF;AASD,CAvCD;;AAyCA,MAAMa,kBAAkB,GAAG,CAAC;AAC1Bb,EAAAA,GAD0B;AAE1BC,EAAAA,SAAS,GAAG;AAFc,CAAD,KAOzB;AAAK,EAAA,SAAS,EAAEP,EAAE,CAACO,SAAD,EAAY,sBAAZ,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,GAAD;AACE,EAAA,SAAS,EAAEP,EAAE,CACX,4BADW,EAEV,+BAA8BM,GAAI,EAFxB,CADf;AAKE,EAAA,IAAI,EAAG,YAAWF,OAAO,CAACE,GAAD,EAAM,CAAN,CAAS,MALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAQE,MAAC,WAAD;AAAa,EAAA,GAAG,EAAEA,GAAlB;AAAuB,EAAA,SAAS,EAAEN,EAAE,CAAC,6BAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,CAPF;;AAmBA,eAAemB,kBAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useStoreState } from 'unistore-hooks';\nimport { State } from '@store/types';\n\nimport './CalendarDay.css';\nimport cn from '@utils/classnames';\nimport { DATE_TODAY } from '@utils/calendar';\nimport dayjs from '@utils/dayjs';\nimport { SVG } from '@theme';\nimport { zeroPad } from '@utils/helpers';\n\nconst CalendarDay = ({\n  day,\n  className = '',\n}: {\n  day: number;\n  className?: string;\n}) => {\n  const { days: storeDays } = useStoreState<State>(['days']);\n\n  const dayObject = React.useMemo(() => storeDays[day], [storeDays[day], day]);\n  const isActive = React.useMemo(\n    () => !dayjs(dayObject.data.date).isAfter(DATE_TODAY),\n    [dayObject]\n  );\n\n  const Wrapper = ({\n    children,\n    ...props\n  }: {\n    children: any;\n    [key: string]: any;\n  }) =>\n    isActive ? (\n      <Link to={`/day/${day}/`} {...props}>\n        {children}\n      </Link>\n    ) : (\n      <div {...props}>{children}</div>\n    );\n\n  return (\n    <Wrapper\n      className={cn(className, 'calendar-day', {\n        'calendar-day--active': isActive,\n      })}\n    >\n      <div className=\"calendar-day__inner\">{day}</div>\n    </Wrapper>\n  );\n};\n\nconst CalendarDayWrapper = ({\n  day,\n  className = '',\n}: {\n  day: number;\n  className?: string;\n}) => (\n  <div className={cn(className, 'calendar-day-wrapper')}>\n    <SVG\n      className={cn(\n        'calendar-day-wrapper__snow',\n        `calendar-day-wrapper__snow--${day}`\n      )}\n      path={`snowwall-${zeroPad(day, 2)}.svg`}\n    />\n    <CalendarDay day={day} className={cn('calendar-day-wrapper__inner')} />\n  </div>\n);\n\nexport default CalendarDayWrapper;\n"]},"metadata":{},"sourceType":"module"}